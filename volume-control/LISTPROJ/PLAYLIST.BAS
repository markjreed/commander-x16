#CONTROLCODES 1
SPRITE 0,0:MOUSE 0:COLOR 15,0:CLS
PRINT "{CR}"
PRINT "  ** LOADING BOOK **{CR}"
COLOR 10
PRINT "  F1";:COLOR 15
PRINT " - TOGGLES TEXT DISPLAY ";:COLOR 10:WAITTIME=TI+30
FOR I=0 TO -1 STEP 0
    SLEEP
    PRINT ".";
    I=(TI>WAITTIME)
NEXT

#INCLUDE "BOOKS.DEF"

FIFOFULL = %10000000
BIT16.ON = %00100000
STEREO.ON = %00010000
VOLMASK = %11110000
VOLMAX = %11111111
DefaultVolume = 15
MaxVolume = 15
IsPaused = 0
IsFinished = 0
PlayFinished = 0
UserStop = 0
SaveTimer = 0
StartPCM.Play = $A041
ContinuePCM.Play= $A019
BMX.BANKLOADER=$A019
BOOKDIR$="../"
ARROWS$=CHR$($80)+CHR$($18)+CHR$($80)+CHR$($19)
BOOK.Startup = -1
GOT.BOOKMARK = 0
INCHAPTER = 0
CLS
GOSUB VERIFY.GOOD.LOAD
GOSUB GET.TARGET.DIR
GOSUB TestFileSystem
COMMAND$="CD:"+TargetDir$
GOSUB DOS.CMD
IF FCode > 20 THEN ERRMSG$="CAN'T CHANGE DIRECTORY "+TargetDir$:GOTO ERRORHALT

BMX.HDR$=RPT$(32,32)
BMX.HDRSIZE=32

GOSUB CLEAR.GRAPHICSBUFFER
GOSUB SAVE.SCREEN.MODE
VPOKE 1,$FA0C,0:VPOKE 1,$FA0D,0
IF SAVEDMODE<>$80 THEN GOSUB HIDEALL:SLEEP:SCREEN $80
GOSUB LoadDCharsCP437
COLOR 0:CLS
GOSUB SET.VGATextColors
RECT 0,0,319,239,0:GOSUB SHOWALL



GOSUB PLAYBOOK
COMMAND$="CD:.."
GOSUB DOS.CMD
GOSUB SHOWTEXT
FOR I=1 TO 8:CLOSE I:NEXT

VPOKE 1,$FA0C,0:VPOKE 1,$FA0D,0
SLEEP:SCREEN 0:CLS
LOAD MyRootDir$+"/BOOKMENU.PRG"

PLAYBOOK:
  CHAPTER = 0
  SINGLE.CHAPTER = FALSE
  GOSUB LOADBOOK
  IF NOT SUCCESS THEN ERRMSG$="BOOK ERROR":GOTO ERRORHALT
  GOSUB CHECKART

  F$="INTRO.WAV":GOSUB FILEEXISTS
  IF FE% THEN GOSUB PLAY.INTRO

  IF NOT SINGLE.CHAPTER THEN CHAPLOOP
  BOOKDIR$=""
  GOTO PLAYSINGLE


CHAPLOOP:
  BOOKDIR$="../"
  CHAPTER = CHAPTER + 1
  GOSUB CHECKBOOKMARK
  IF (CHAPTERS > 0) AND (CHAPTER>CHAPTERS) THEN PRINT "DONE ":RETURN
  CHAPTER$=STR$(CHAPTER)
  CHAP$ = "CHAP" + MID$(STR$(CHAPTER),2)
  COMMAND$ = "CD:"+CHAP$
  GOSUB DOS.CMD
  IF FCode > 20 THEN PRINT "DONE ":RETURN
  INCHAPTER = TRUE
  GOSUB CHECKART
  BANK 3
  IF CHAPTER = 1 OR LOADED OR GOT.BOOKMARK THEN GOSUB INFORMATION.BOX
  COLOR VGA.WHITE, VGA.DARKGRAY
  GOSUB PRINTCHAPTER
  GOSUB PLAYCHAPTER
  PCM.VOLUME = PEEK(AUDIO.Ctrl) AND 15
  IF NOT DO.QUIT THEN CHAPLOOP
  GOTO BOOK.DONE

PLAYSINGLE:
  F$=BOOKFILE$:GOSUB FILEEXISTS
  IF NOT FE% THEN PRINT "NO FILE ";F$:GOSUB SHOWALL:END
  GOSUB INFORMATION.BOX
  GOSUB CHECKBOOKMARK
  F$=BOOKFILE$
  GOSUB LOADWAVE
  LOCATE 26,4
  COLOR VGA.BLUE, VGA.WHITE
  SAVETIMER=0
  IF GOT.BOOKMARK THEN GOSUB BOOK.SEEK
  IF GOT.BOOKMARK THEN GOT.BOOKMARK=FALSE:SAVETIMER=SEEKPOS
  GOSUB PLAY.Wave.File
  TextVisible=PEEK(R13L)

  F$="EPILOGUE.WAV":GOSUB FILEEXISTS
  IF FE% THEN GOSUB PLAY.EPILOGUE

BOOK.DONE:
  PCM.VOLUME = PEEK(AUDIO.Ctrl) AND 15
  RETURN

PLAYCHAPTER:
  EXT$=".WAV"
  F$=CHAP$+EXT$:GOSUB FILEEXISTS
  IF NOT FE% THEN PRINT "NO FILE ";F$:GOSUB SHOWALL:END
  GOSUB LOADWAVE
  LOCATE 26,4
  COLOR VGA.BLUE, VGA.WHITE
  SAVETIMER=0
  IF GOT.BOOKMARK THEN GOSUB BOOK.SEEK
  IF GOT.BOOKMARK THEN GOT.BOOKMARK=FALSE:SAVETIMER=SEEKPOS
  GOSUB PLAY.Wave.File
  TextVisible=PEEK(R13L)
  PCM.VOLUME = PEEK(AUDIO.Ctrl) AND 15
  COMMAND$="CD:.."
  GOSUB DOS.CMD
  INCHAPTER = FALSE
  COLOR VGA.WHITE, BLACK
  RETURN

PLAY.INTRO:
  IN.PREFACE=-1
  RETURN

PLAY.EPILOGUE:
   IN.EPILOGUE=-1
   RETURN

PLAY.LISTFILE:
 RETURN

CHECKBOOKMARK:
   SAVECHAPTER = CHAPTER
   CHAPTER = 0
   F$="BOOK.MARK":GOSUB FILEEXISTS
   IF NOT FE% THEN RETURN
   OPEN 7,DEVICE,7,"BOOK.MARK,S,R"
   C$=""
   INPUT# 7, S$
   GOSUB TRIM
   IF S$<>"SINGLE" AND S$<>"INTRO" AND S$<>"EPILOGUE" THEN CHAPTER = VAL(S$)
   IF S$="INTRO" THEN CHAPTER = -1
   IF S$="EPILOGUE" THEN CHAPTER = -255
   S$=""
   INPUT# 7, S$
   SEEKTIMER = VAL(S$)
   CLOSE 7
   GOT.BOOKMARK = (CHAPTER > 0) OR (CHAPTER=-1) OR (CHAPTER=-255)
   IF NOT GOT.BOOKMARK THEN CHAPTER = SAVECHAPTER
   IF GOT.BOOKMARK THEN GOTO KILLFILE

BOOK.SEEK:
  SEEKPOS = INT(SEEKTIMER/60)
  TARGETBLOCK = INT((BytesPerSecond * SEEKPOS) / 65536)
  SEEKPOS = ((TARGETBLOCK*65536)/BytesPerSecond)*60
  P0=44
  P1=0
  P2 = FN LO.Byte(TARGETBLOCK)
  P3 = FN HI.Byte(TARGETBLOCK)
  CHANNEL = 6
  GOTO POSITION

CHECKART:
  LOADED = FALSE
  F$="ART.BMX":GOSUB FILEEXISTS
  IF NOT FE% THEN RETURN
  IF BOOK.Startup THEN TextVisible=0:GOSUB HIDETEXT:BOOK.Startup = 0
  REM IF BOOK.Startup THEN TextVisible=0:BOOK.Startup = 0
  GOSUB HIDEALL
  CLS
  RECT 0,0,319,239,0
  BMXFILE$=F$
  GOSUB LOADBMX
  CLOSE 4
  GOSUB SHOWGRAPHICS
  IF TextVisible = 255 THEN GOSUB SHOWTEXT
  LOADED=TRUE
  GOSUB SET.VGATextColors
  RETURN

LOADBOOK:
   GOT.SINGLE=0
   SUCCESS = 0
   PCM.VOLUME = DefaultVolume
   F$="BOOK.DESC":GOSUB FILEEXISTS
   IF NOT FE% THEN RETURN
   OPEN 5,DEVICE,5,"BOOK.DESC,S,R"
   SUBTITLE$=""
   INPUT# 5, TITLE$
   INPUT# 5, AUTHOR$
   LINPUT# 5, TMP$
   IF TMP$="ENDDESC" THEN ENDLOADBOOK
   YEAR$=TMP$
   LINPUT# 5, TMP$
   IF TMP$="ENDDESC" THEN ENDLOADBOOK
   SUBTITLE$=TMP$
ENDLOADBOOK:
   SUCCESS = TRUE
   CLOSE 5
   F$="BOOK.CHAPS":GOSUB FILEEXISTS
   IF NOT FE% THEN RETURN
   OPEN 5,DEVICE,5,F$+",S,R"
   INPUT# 5, S$
   GOSUB TRIM
   IF S$="NONE" THEN GOT.A.SINGLE
   CHAPTERS = VAL(S$)
   IF CHAPTERS=0 THEN CHAPTERS=-1
   GOTO DONE.LOAD.BOOK
GOT.A.SINGLE:
   GOT.SINGLE = -1
   GOSUB SHOWALL
   CHAPTERS=-2
   SINGLE.CHAPTER = -1
   INPUT# 5, BOOKFILE$
DONE.LOAD.BOOK:
   CLOSE 5:RETURN

LOADWAVE:
   GOSUB LoadWAVEHeader
   GOSUB ParseRIFFHeader
   RETURN

PLAY.Wave.File:
   UserEnded = 0
   PAUSED = 0
   IF FASTMODE AND (NOT IsHostFS) THEN DOS "U0>B0"
   FillLoopCount = 4
   IF IsHostFS THEN FillLoopCount = 12
   IF BytesPerSecond > 79999 THEN FillLoopCount = FillLoopCount+1
   IF BytesPerSecond > 120000 THEN FillLoopCount = FillLoopCount+1
   IF BytesPerSecond > 120000 AND (FASTMODE AND (NOT IsHostFS)) THEN DOS "U0>B3"
   POKE R13L, TextVisible
   POKE A.REG, FillLoopCount
   POKE X.REG, 6
   POKE R0L, VERA.RATE
   POKE R0H, VERA.CFG
   POKE R1L, $FF
   BANK 3
   TI = SAVETIMER
   SYS StartPCM.Play
   GOSUB SaveCursor.AndColor
getPKey:
   SAVETIMER=TI
   rKey = PEEK(R2L)
   TextVisible = PEEK(R13L)
   IF rKey = 9 AND (NOT SINGLE.CHAPTER) THEN rKey = 0
   IF rKey = 9 THEN GOSUB KEEP.PLAYING:GOTO getPKey
   IF rKey = 0  THEN CLOSE 6:COLOR VGA.WHITE,BLACK:GOTO SCRATCH.BOOKMARK
   GOSUB WRITEBOOKMARK
   IF rKey = 32 OR rKey=27 THEN CURSAVED=0:GOSUB Wait32
   IF DO.QUIT THEN RETURN
   GOTO getPKey

Wait32:
  GOSUB SHOW.PAUSED
Wait32b:
  K=rKey
  IF rKey=27 THEN GOSUB ASK.2.QUIT
  IF DO.QUIT THEN RETURN
  IF K=27 AND NOT DO.QUIT THEN GOTO PLAY.CONTINUE

  FOR I = 0 TO 1 STEP 0
    GET K$
    K=ASC(K$)
    IF K=27 THEN rKey=27:GOTO Wait32b
    IF K=32 THEN PLAY.CONTINUE
  NEXT I

PLAY.CONTINUE:
  POKE R2L,0:COLOR VGA.WHITE, VGA.DARKGRAY
  LOCATE 25,4:PRINT RPT$(32,11);
  IF TextVisible=0 THEN GOSUB HIDETEXT
KEEP.PLAYING:
  GOSUB RestoreCursor.AndColor
  TI=SAVETIMER
  SYS ContinuePCM.Play
  GOSUB SaveCursor.AndColor
  rKey = PEEK(R2L)
  IF rKey=32 OR rKey=27 THEN SHOW.PAUSED
  RETURN

SCRATCH.BOOKMARK:
 IF USER.QUIT THEN USER.QUIT=0:RETURN
 F$=BOOKDIR$+"BOOK.MARK":GOSUB FILEEXISTS
 IF FE% THEN GOTO KILLFILE
 RETURN

SHOW.PAUSED:
  GOSUB SHOWTEXT
  LOCATE 25, 4
  COLOR VGA.LITERED, VGA.BLACK2
  PRINT "*";
  COLOR VGA.GREEN
  PRINT " PAUSED ";
  COLOR VGA.LITERED
  PRINT "*";
  COLOR VGA.WHITE,BLACK
  RETURN

WRITEBOOKMARK:
  OPEN 7,DEVICE,7,"@:"+BOOKDIR$+"BOOK.MARK,S,W"
  IF SINGLE.CHAPTER THEN PRINT# 7, "SINGLE":GOTO OUTTIME
  IF IN.PREFACE THEN PRINT# 7,"PREFACE":PRINT# 7,PLINE:GOTO OUTTIME
  IF IN.OUTTAKE THEN PRINT# 7,"OUTTAKE":PRINT# 7,PLINE:GOTO OUTTIME
  PRINT# 7, CHAPTER
OUTTIME:
  PRINT# 7, TI
  CLOSE 7
  RETURN

ASK.2.QUIT:
 USER.QUIT=0
 DO.QUIT=0
 TextVisible = PEEK(R13L)
 GOSUB SHOWTEXT
 BANK 3
 COLOR VGA.RED, VGA.BLACK2
 X=5:Y=11:H=9:W=32:GOSUB TEXTBOX
 COLOR VGA.RED
 LOCATE 14,7:PRINT "QUIT ";
 COLOR VGA.GREEN
 PRINT TITLE$;" ";
 LOCATE 16, 9
 COLOR VGA.MEDGRAY
 PRINT "(";
 COLOR VGA.LITEGREEN
 PRINT "Y";:COLOR VGA.YELLOW:PRINT "/";:COLOR VGA.LITEGREEN
 PRINT "N";:COLOR VGA.MEDGRAY:PRINT ")";
 LOCATE 12, 10
 GOTIT = FALSE
 COLOR VGA.WHITE, VGA.DARKGRAY
 LOCATE 16, 14:PRINT " ";
 COLOR VGA.YELLOW
GETIT:
 GET X$:IF X$="" THEN GETIT
 IF X$="y" THEN X$="Y"
 IF X$="n" THEN X$="N"
 IF X$="{ESC}" THEN GOTIT=TRUE:Q$="N":X$="{CR}"
 IF X$<>"Y" AND X$<>"N" AND X$<>"{CR}" THEN FMDRUM 7,87
 IF X$="Y" OR X$="N" THEN GOTIT = TRUE:Q$=X$:LOCATE 16,14:PRINT X$;
 IF X$<>"{CR}" THEN GETIT
 DO.QUIT = (Q$="Y")
 IF DO.QUIT THEN USER.QUIT=-1
 IF NOT DO.QUIT THEN GOSUB INFO2:GOSUB RestoreCursor.AndColor:IF TextVisible=0 THEN GOSUB HIDETEXT
 rKey = 32
 IF DO.QUIT THEN rKey=0
 RETURN

SHOW.ControlBar:
 COLOR VGA.WHITE,VGA.BLACK2
 LOCATE 30,1
 PRINT RPT$(32,40);
 LOCATE 30,2
 PRINT "[";
 COLOR VGA.LITEGREEN
 PRINT "ESC";
 COLOR VGA.WHITE
 PRINT "]-";
 COLOR VGA.LITERED:PRINT "Exit";
 LOCATE 30, 14
 COLOR VGA.WHITE
 PRINT "[";
 COLOR VGA.LITEGREEN
 PRINT "SPACE";
 COLOR VGA.WHITE
 PRINT "]-";
 COLOR VGA.LITERED:PRINT "Pause";
 LOCATE 30,29
 COLOR VGA.WHITE
 PRINT "[";:COLOR VGA.LITEGREEN
 PRINT ARROWS$;
 COLOR VGA.WHITE:PRINT "]-";
 COLOR VGA.LITERED:PRINT "Volume";
 LOCATE 29, 3
 COLOR VGA.WHITE
 PRINT "[";
 COLOR VGA.LITEGREEN
 PRINT "F1";
 COLOR VGA.WHITE
 PRINT "]-";
 COLOR VGA.LITERED:PRINT "Info ";
 COLOR VGA.YELLOW
 PRINT "On";
 COLOR VGA.LITEGREEN
 PRINT "/";
 COLOR VGA.YELLOW
 PRINT "Off   ";
 IF GOT.SINGLE THEN RETURN
 COLOR VGA.WHITE:PRINT "[";
 COLOR VGA.LITEGREEN:PRINT "TAB";
 COLOR VGA.WHITE:PRINT "]-";
 COLOR VGA.LITERED
 PRINT "Next Chapter";
 RETURN

ParseRIFFHeader:
  IsWave = (LEFT$(RIFFHDR$,4) = "RIFF") AND (MID$(RIFFHDR$,9,4)="WAVE")
  PCMBits = ASC(MID$(RIFFHDR$,35,1))
  TMP1 = ASC(MID$(RIFFHDR$,21,1))
  TMP2 = ASC(MID$(RIFFHDR$,22,1))
  NumChannels = ASC(MID$(RIFFHDR$,23,1))
  TMP4 = (TMP1) + (256*TMP2)
  IsPCM = (TMP4=1)
  TMP1 = ASC(MID$(RIFFHDR$,25,1))
  TMP2 = ASC(MID$(RIFFHDR$,26,1)) * 256
  TMP3 = ASC(MID$(RIFFHDR$,27,1)) * 65536
  SampleRate = TMP1+TMP2+TMP3
  VERA.RATE = FN ROUND((SampleRate / 48828.15) * 128)
  IsStereo = (NumChannels=2)
  IsSupported = (IsWave AND (PCMBits=16)) AND IsPCM AND ((NumChannels > 0) AND (NumChannels < 3))
  VERA.CFG=0
  IF NOT IsSupported THEN RETURN
  VERA.CFG = (VERA.CFG OR BIT16.ON)
  IF IsStereo THEN VERA.CFG = (VERA.CFG OR STEREO.ON)
  VERA.CFG = VERA.CFG OR PCM.VOLUME
  BytesPerSecond = ((VERA.RATE/128) * 48828.15)*2
  IF IsStereo THEN BytesPerSecond = BytesPerSecond*2
  BytesPerSecond = FN ROUND(BytesPerSecond)
  RETURN

LoadWAVEHeader:
   RIFFHDR$ = RPT$(44,44)
   OPEN 6,8,6,F$+",S,R"
     POKE X.REG, 6
     SYS CHKIN
     POKE A.REG, 44
## GET A POINTER TO THE WAVEHDR STRING THEN PEEK
## IT FOR THE ADDRESS TO THE STRING DATA
     A=POINTER(RIFFHDR$)+1
     POKE X.REG, PEEK(A)
     POKE Y.REG, PEEK(A+1)
     POKE C.REG, 0
     SYS MACPTR
     SYS CLRCHN
     RETURN

INFORMATION.BOX:
 GOSUB HIDETEXT
 COLOR VGA.WHITE,BLACK
 CLS
 GOSUB SHOW.ControlBar
 COLOR VGA.WHITE,BLACK
INFO2:
 COLOR VGA.YELLOW, VGA.DARKGRAY
 X=3:Y=4:H=24:W=36:GOSUB TEXTBOX
 COLOR VGA.WHITE, VGA.BLACK2
 L = LEN(TITLE$)
 WORKTITLE$ = TITLE$
 IF L<22 THEN WORKTITLE$ = "{GREY 1} **{LIGHT RED} "+TITLE$+"{GREY 1} ** "
 L = LEN(WORKTITLE$)
 X = FN ROUND((40 - L)/2) + 1
 LOCATE 2, X:PRINT WORKTITLE$;

 COLOR VGA.LITEGREEN,VGA.DARKGRAY
 LOCATE 6, 5:PRINT "Author: ";
 COLOR VGA.WHITE:PRINT AUTHOR$;

IF LEN(SUBTITLE$) = 0 THEN YEARPRINT
COLOR VGA.LITEGREEN, VGA.DARKGRAY
LOCATE 9,5:PRINT "Full Title: ";
COLOR VGA.WHITE
IF LEN(SUBTITLE$)<21 THEN GOTO SUBTITLEPRINT
   GOT.COMMA = 0
   FOR I = 1 TO LEN(SUBTITLE$)
       C$=MID$(SUBTITLE$,I,1)
       PRINT C$;
       GOSUB PLOTXY
       IF (X > 28) AND (C$=CHR$(32) OR C$=CHR$(9) OR GOT.COMMA) THEN LOCATE Y+1, 5
       GOT.COMMA = (C$=",")
   NEXT I
GOTO YEARPRINT

SUBTITLEPRINT:
  PRINT SUBTITLE$;
YEARPRINT:
  GOSUB PLOTXY
  LOCATE Y+2, 5
  COLOR VGA.LITEGREEN:PRINT "Published: ";
  COLOR VGA.WHITE:PRINT YEAR$;
PRINTCHAPTER:
  LOCATE 24,4:PRINT RPT$(32,34);
  LOCATE 24,5
  F$="CHAP.TITLE":GOSUB FILEEXISTS
  IF FE% THEN GOSUB GRAB.LINE:GOTO CHAPTER.TITLE
CHAPTER.NUMBER:
  COLOR VGA.LITEGREEN
  IF SINGLE.CHAPTER THEN SINGLEPRINT
  PRINT "Playing Chapter: ";
  COLOR VGA.YELLOW:PRINT CHAPTER$;
  IF CHAPTERS > 0 THEN COLOR VGA.LITEGREEN:PRINT " of";:COLOR VGA.YELLOW:PRINT CHAPTERS;
  GOTO END.INFO
SINGLEPRINT:
  PRINT "Playing: ";
  COLOR VGA.YELLOW
  PRINT BOOKFILE$
  GOTO END.INFO
CHAPTER.TITLE:
 IF LN$="" THEN CHAPTER.NUMBER
 L = LEN(LN$)
 COLOR VGA.YELLOW
 IF L>32 THEN LOCATE 24,4
 IF L>34 THEN LN$=LEFT$(LN$,34)
 PRINT LN$;
END.INFO:
 IF TextVisible=255 THEN GOTO SHOWTEXT
 RETURN

GRAB.LINE:
   LN$=""
   FF$=F$+",S,R"
   OPEN 7,8,7,FF$
   LINPUT# 7,LN$
   CLOSE 7
   RETURN

LOADBMX:
     OPEN 4,DEVICE,4,BMXFILE$+",S,R"
     POKE X.REG, 4
     SYS CHKIN
     POKE A.REG, 32
## GET A POINTER TO THE BMX.HDR STRING THEN PEEK
## IT FOR THE ADDRESS TO THE STRING DATA
     A=POINTER(BMX.HDR$)+1
     POKE X.REG, PEEK(A)
     POKE Y.REG, PEEK(A+1)
     POKE C.REG, 0
     SYS MACPTR
     SYS CLRCHN
     WASERROR = 0
     DOSHOW = 0
     GOSUB PARSEHEADER
     IF BMX.ID$<>"BMX" THEN ERRMSG$= "{RED}"+F$+"{WHT} IS NOT A BMX FILE":GOTO ERR.EXIT1
     IF BMX.BITS<>8 THEN ERRMSG$= "{RED}"+STR$(BMX.BITS)+"{WHT} BITS NOT SUPPORTED":GOTO ERR.EXIT1
     IF BMX.VER<>1 THEN ERRMSG$= "{RED}"+F$+"{WHT} IS VERSION:{RED}"+STR$(BMX.VER)+"{WHT} NOT SUPPORTED!":GOTO ERR.EXIT1
     IF BMX.WIDTH > 320 THEN ERRMSG$= "{RED}"+STR$(BMX.WIDTH)+"{WHT} WIDTH NOT CURRENTLY SUPPORTED":GOTO ERR.EXIT1
     POKE R0L, FN Lo.Byte(BMX.WIDTH)
     POKE R0H, FN Hi.Byte(BMX.WIDTH)
     POKE R1L, FN Lo.Byte(BMX.HEIGHT)
     POKE R1H, FN Hi.Byte(BMX.HEIGHT)
     POKE R2L, BMX.PALUSED
     POKE R2H, BMX.FIRSTPAL
     BANK 4
     SYS BMX.BANKLOADER
     CLOSE 4
RETURN

ERR.EXIT1:
 SCREEN 1
 PRINT "BMX ERROR: ";ERRMSG$
 CLOSE 4:SYS CLRCHN
 END
ERR.EXIT:
 PRINT:PRINT " ";ERRMSG$:WASERROR=-1:RETURN

PARSEHEADER:
  BMX.ID$=LEFT$(BMX.HDR$,3)
  BMX.VER=ASC(MID$(BMX.HDR$,4,1))
  BMX.BITS = ASC(MID$(BMX.HDR$,5,1))
  BMX.VERA.REG=ASC(MID$(BMX.HDR$,6,1))
  BMX.WIDTH = ASC(MID$(BMX.HDR$,7,1)) + (ASC(MID$(BMX.HDR$,8,1))*256)
  BMX.HEIGHT = ASC(MID$(BMX.HDR$,9,1)) + (ASC(MID$(BMX.HDR$,10,1))*256)
  BMX.PALUSED = ASC(MID$(BMX.HDR$,11,1))
  BMX.FIRSTPAL = ASC(MID$(BMX.HDR$,12,1))
  BMX.FILE.OFFSET = ASC(MID$(BMX.HDR$,13,1))+(ASC(MID$(BMX.HDR$,14,1))*256)
  BMX.COMPRESS= ASC(MID$(BMX.HDR$,15,1))
  RETURN


TestFileSystem:
 F$="TESTFILE":GOSUB FILEEXISTS
 IF FE% THEN StartTest
 OPEN 2,8,2,"@:TESTFILE,S,W"
 FOR I = 1 TO 100
     PRINT# 2, "ABCDEFGHIJKLMN"
 NEXT I
 CLOSE 2
StartTest:
 OPEN 2,8,2,"TESTFILE,S,R"
 POKE X.REG,2
 SYS CHKIN
 BANK 62
 POKE X.REG,$00
 POKE Y.REG,$A0
 POKE C.REG, 0
 POKE A.REG, 0
 SYS MACPTR
 IsHostFS = (PEEK(Y.REG) = 1)
 SYS CLRCHN
 CLOSE 2
 RETURN




#INCLUDE "BOOKS.BI"
