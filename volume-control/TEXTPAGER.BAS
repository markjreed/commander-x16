#CONTROLCODES 1
#SYMFILE "@:README.SYM"
#INCLUDE "VGACOLORS.DEF"
  GOSUB POKENOFLICKER:GOSUB SETREGVARS
  RELEASE.ROM=0:OB=PEEK(1):BANK PEEK(0),0
  ROM.VERSION=FN SIGNED.BYTE(PEEK($FF80))
  RELEASE.ROM=(ROM.VERSION>0)
  ROM.VERSION=ABS(ROM.VERSION):BANK PEEK(0),OB
  IF (ROM.VERSION>46 AND RELEASE.ROM) OR (ROM.VERSION>47) THEN FASTSERIAL.AVAILABLE=TRUE:CP437.AVAILABLE=TRUE

  ORIGBANK1=PEEK(0)
  ORIGBANK2=PEEK(1)
  DEVICE=8
  UP$=CHR$(145)
  ARROWS$=CHR$($80)+CHR$($18)+CHR$($80)+CHR$($19)
  MYMODE=1:GOSUB NOFLICKERSCREEN
  FGROUND = BLACK
  BGROUND = VGA.WHITE
  SAVEBANK=60
  GOSUB SET.VGATextColors
  GOSUB SET.ThinCP437
  SCREEN 1
  COLOR 15,VGA.BLACK2:CLS
  LOCATE 30,68
  COLOR VGA.WHITE:PRINT "[";
  COLOR VGA.LITEGREEN:PRINT "ESC";
  COLOR VGA.WHITE:PRINT "]-";
  COLOR VGA.LITERED:PRINT "Exit";
  LOCATE 30,22
  COLOR VGA.WHITE:PRINT "[";
  COLOR VGA.LITEGREEN:PRINT "PGDN/PGUP";
  COLOR VGA.WHITE:PRINT "]-";
  COLOR VGA.LITERED:PRINT "Text Page";
  LOCATE 30,47
  COLOR VGA.WHITE:PRINT "[";
  COLOR VGA.LITEGREEN:PRINT "F12";
  COLOR VGA.WHITE:PRINT "]-";
  COLOR VGA.LITERED:PRINT "Dark";
  COLOR VGA.YELLOW:PRINT "/";
  COLOR VGA.LITERED:PRINT "Light";


  LOCATE 30,2: COLOR VGA.WHITE:PRINT "[";
  COLOR VGA.LITEGREEN:PRINT ARROWS$;
  COLOR VGA.WHITE:PRINT "]-";
  COLOR VGA.LITERED:PRINT "Line Advance";
  GOSUB SHOWTEXT
  LOCATE 1,1
  POKE X.REG, 80
  POKE Y.REG, 29
  IF ROM.VERSION < 48 OR ((ROM.VERSION<49) AND (NOT RELEASE.ROM)) THEN SKIP.SCNSIZ1
     POKE A.REG, 13
     SYS $FEAB
     GOTO SKIP.SCNSIZ2
SKIP.SCNSIZ1:
     BANK 1,0
     SYS $C065
     BANK ORIGBANK1,ORIGBANK2
SKIP.SCNSIZ2:
  VPOKE 1,$FA1E, $DD
  VPOKE 1,$FA1F, $D
  COLOR VGA.WHITE,BLACK:CLS
  GOSUB CHECK.FOR.FILE
  IF THEFILE$<>"" THEN F$=THEFILE$:GOTO CHECK.IF.IT.IS.THERE
RETRYIT:
  LOCATE 1,1
  PRINT "FILE NAME: ";
  LINPUT F$
  IF F$="DONE" THEN READDONE
CHECK.IF.IT.IS.THERE:
  GOSUB FILEEXISTS
  IF NOT FE% THEN GOTO RETRYIT
  THEFILE$=F$
  CHANNEL=4:P0=0:P1=0:P2=0:P3=0
  OPEN 4,8,4,THEFILE$+",S,R":GOSUB SET.LINE.END
  GOSUB POKEFASTFWD
  FILE.LINE = 1
  GOSUB SHOWPAGE

WAITKEY:
  GET X$
  IF PEEK($70)=27 THEN X$=CHR$(27):GOSUB FLUSHBREAK
  IF X$="" THEN WAITKEY

  K=ASC(X$):IF K=27 THEN READDONE
  IF K=23 THEN GOSUB SWAP.SCREEN.COLORS:GOTO WAITKEY
  IF K=17 THEN GOSUB NEXT.LINE:GOTO WAITKEY
  IF K=145 THEN GOSUB TOP.LINE
  IF K=2 AND EOF THEN FMDRUM 7,87:GOTO WAITKEY
  IF K=2 THEN FILE.LINE=FILE.LINE+29:GOSUB SEEK.LINE:GOSUB SHOWPAGE
  IF K=130 AND FILE.LINE=1 THEN FMDRUM 7,87:GOTO WAITKEY
  IF K=130 THEN IF FILE.LINE>1 THEN FILE.LINE=FILE.LINE-29:IF FILE.LINE<1 THEN FILE.LINE=1
  IF K=130 THEN GOSUB SEEK.LINE:GOSUB SHOWPAGE
  GOTO WAITKEY

READDONE:
  CLOSE 4
  SCREEN.LINES=30:GOSUB SET.SCREEN.LINES
  GOTO CLEANUP.AND.END

FLUSHBREAK:
 FOR I=-1 TO 0 STEP 0
    SLEEP:POKE A.REG,32
    SYS $FEC3
    SLEEP
    POKE $70, 0
    GET Z$
    SLEEP
    I=(PEEK($70)=27)
 NEXT
 RETURN


SHOWPAGE:
 IF FILE.LINE=1 THEN CLOSE 4:OPEN 4,8,4,THEFILE$+",S,R"
 FCOUNT=0
 COLOR FGROUND, BGROUND
 CLS
DOLOAD:
 FOR J=1 TO 29
   LINPUT# 4, X$,LINE.ENDING
   IF IS.WINDOWS.FILE THEN GET# 4,T$
   L=LEN(X$)
   EOF = (ST<>0)
   FCOUNT = FCOUNT+1
   PRINT LEFT$(X$,80);
   IF LEN(X$)<80 AND J<29 THEN PRINT
   IF EOF THEN J=29
 NEXT J
 IF EOF THEN CLOSE 4
 AT.SCREEN.BOTTOM = -1
RETURN


NEXT.LINE:
   IF EOF THEN FMDRUM 7,87:RETURN
   IF AT.SCREEN.BOTTOM THEN PRINT:GOTO SKIP.ADJUST
   LOCATE 29,1:PRINT CHR$(17);
   LOCATE 29,1
   AT.SCREEN.BOTTOM=-1
   SLINE=FILE.LINE
   FILE.LINE=SLINE+FCOUNT:GOSUB SEEK.LINE
   FILE.LINE=SLINE
SKIP.ADJUST:
   LINPUT# 4, X$,LINE.ENDING
   IF IS.WINDOWS.FILE THEN GET# 4,T$
   EOF = (ST<>0)
   FILE.LINE=FILE.LINE+1
   PRINT LEFT$(X$,80);
   IF EOF THEN CLOSE 4
RETURN

TOP.LINE:
   IF FILE.LINE=1 THEN FMDRUM 7,87:RETURN
   IF EOF THEN CLOSE 4:OPEN 4,8,4,THEFILE$+",S,R"
   AT.SCREEN.BOTTOM = 0
   LOCATE 1,1:PRINT UP$
   SLINE=FILE.LINE
   FILE.LINE=FILE.LINE-1:GOSUB SEEK.LINE
   IF EOF THEN FMDRUM 7,87:FILE.LINE=SLINE:RETURN
   LINPUT# 4, X$,LINE.ENDING
   IF IS.WINDOWS.FILE THEN GET# 4, T$
   EOF = (ST<>0)
   L=LEN(X$)
   IF L>80 THEN LOCATE 1,1:PRINT UP$
   IF L>160 THEN LOCATE 1,1:PRINT UP$
   IF L>240 THEN LOCATE 1,1:PRINT UP$
   LOCATE 1,1
   PRINT LEFT$(X$,80);
RETURN

SEEK.LINE:
 IF EOF THEN CLOSE 4:OPEN 4,8,4,THEFILE$+",S,R":EOF=0
 GOSUB POSITION
 IF FILE.LINE=1 THEN RETURN
 TL=(FILE.LINE)-1
 POKE A.REG,4:POKE Y.REG, INT(TL/256):
 POKE X.REG, TL-PEEK(Y.REG)*256:
 CALL=STRPTR(FASTFWD$):SYS CALL
 IF IS.WINDOWS.FILE THEN GET# 4, T$
 EOF = (ST<>0)
RETURN


ERRORHALT.LOCAL2:
 PRINT:PRINT DM$:PRINT:PRINT
 IF NOT FROM.MENU THEN END
 PRINT "{YEL}PRESS{WHT} ANY KEY"
FLUSH:
  GET X$:IF X$<>"" THEN FLUSH
KEYPRESS:
  GET X$:IF X$="" THEN KEYPRESS
  GOTO CLEANUP.AND.END


NOFLICKERSCREEN:
 POKE A.REG, MYMODE
 ADDR=STRPTR(NOFLCKER$)
 SYS ADDR:GOTO SET.VGATextColors

POKENOFLICKER:
  RESTORE NOFLICKER
  NOFLCKER$=""
  FOR A=$400 TO $433
      READ C
      NOFLCKER$=NOFLCKER$+CHR$(C)
  NEXT A
  RETURN

POKEFASTFWD:
   RESTORE FASTFWD650
   FASTFWD$=""
   FOR A=$440 TO $470:READ C:
   IF LINE.ENDING=10 AND C=$0D THEN C=10
   FASTFWD$=FASTFWD$+CHR$(C):NEXT A:RETURN

## 52 BYTES
NOFLICKER:
 DATA $5A,$DA,$48,$A9,$FA,$8D,$21,$9F,$A9,$11,$8D,$22,$9F,$A9,$00,$8D
 DATA $20,$9F,$A2,$04,$A0,$80,$8D,$23,$9F,$88,$D0,$FA,$CA,$D0,$F5,$20,$DE,$FF
 DATA $85,$29,$CB,$20,$DE,$FF,$C9,$FF,$F0,$F8,$68,$18,$20,$5F,$FF,$FA,$7A,$60

## 49 BYTES
FASTFWD650:
  DATA $E0,$00,$D0,$05,$C0,$00,$F0,$24,$88,$C8,$84,$22,$DA,$AA,$20,$C6,$FF,$7A
  DATA $20,$CF,$FF,$C9,$0D,$D0,$07,$88,$D0,$04,$C6,$22,$F0,$0C,$20,$B7,$FF,$29
  DATA $40,$F0,$EB,$20,$CC,$FF,$38,$60,$20,$CC,$FF,$18,$60

SWAP.SCREEN.COLORS:
 CBYTE=VPEEK(1,$B001)
 LOW.NIBBLE = CBYTE AND $0F:BGROUND=LOW.NIBBLE
 HIGH.NIBBLE = (CBYTE AND $F0) / 16:FGROUND=HIGH.NIBBLE
 COLOR FGROUND, BGROUND
 CBYTE = (LOW.NIBBLE*16) + HIGH.NIBBLE
 POKE $9F20, $01
 POKE $9F21, $B0
 POKE $9F22,%00100001
 POKE R0L, $23
 POKE R0H, $9F
 POKE R1L, $80
 POKE R1H, $0E
 POKE A.REG, CBYTE
 SLEEP:SYS MEM.FILL
RETURN

SET.SCREEN.LINES:
  POKE X.REG, 80
  POKE Y.REG, SCREEN.LINES
  IF (ROM.VERSION < 48) OR ((ROM.VERSION<49) AND (NOT RELEASE.ROM)) THEN SKIP.EXTAPI
     POKE A.REG, 13
     SYS $FEAB
  RETURN
SKIP.EXTAPI:
   BANK 1,0
   SYS $C065
   BANK ORIGBANK1,ORIGBANK2
 RETURN

SETREGVARS:
  A.REG = $030C
  X.REG = $030D
  Y.REG = $030E
  C.REG = $030F
  SET.MEM = $FF99
  R0L=$02:R0H=$03:R0=R0L
  R1L=$04:R1H=$05:R1=R1L
  R2L=$06:R2H=$07:R2=R2L
  R3L=$08:R3H=$09:R3=R3L
  R4L=$A:R4H=$B:R4=R4L
  R5L=$C:R5H=$D:R5=R5L
  R6L=$E:R6H=$F:R6=R6L
  R7L=$10:R7H=$11:R7=R7L
  R8L=$12:R8H=$13:R8=R8L
  R9L=$14:R9H=$15:R9=R9L
  R10L=$16:R10H=$17:R10=R10L
  R11L=$18:R11H=$19:R11=R11L
  R12L=$1A:R12H=$1B:R12=R12L
  R13L=$1C:R13H=$1D:R13=R13L
  R14L=$1E:R14H=$1F:R14=R14L
  R15L=$20:R15H=$21:R15=R15L
  CHKOUT=$FFC9:CHKIN=$FFC6:CLRCHN=$FFCC
  MCIOUT=$FEB1:MACPTR=$FF44:
  VERA.DATA0=$9F23:VERA.DATA1=$9F24:VERA.CTRL=$9F25
  VERA.DCVIDEO=$9F29
  LAYER0.ON=16
  LAYER0.OFF=239
  LAYER1.ON=32
  LAYER1.OFF=223
  FB.CURSOR.POSITION=$FEFF
  FB.CURSOR.NEXTLINE=$FF02
  SCREEN.SIZE=$12C00
  SET.CHARSET = $FF62
  MEM.COPY = $FEE7
  MEM.FILL = $FEE4
DO.DEFINES:
  DEF FN PEEKW(A)=PEEK(A)+(PEEK(A+1)*256)
## CONVERT TO SIGNED RANGE
  DEF FN SW(W)=W + 65536 * (W > 32767)
## CONVERT TO UNSIGNED RANGE
  DEF FN UW(W)=W-65536*(W<0)
  DEF FN Lo.Byte(X)=(FN SW(X)) AND $FF
  DEF FN Hi.Byte(X)=INT(FN UW(X)/256)
  DEF FN SIGNED.BYTE(N) = N+256*(N>127)
  DEF FN ROUND(X) = INT(X+.5)
RETURN

SET.ThinCP437:
   OB2=PEEK(0)
   PRINT "{ISO ON}
   REM SET ISO THIN FONT
   POKE A.REG,6:SYS SET.CHARSET
   POKE $9F20, $08:POKE $9F21,$F1:POKE $9F22,%00010001
   POKE R0L,$23:POKE R0H,$9F:POKE R1L,$00:POKE R1H,$BC
   POKE R2L, 0:POKE R2H, $03:BANK 10
   SYS MEM.COPY
   POKE A.REG,7:SYS SET.CHARSET
   POKE $9F20,$08:POKE $9F21,$F1:POKE $9F22, %00010001
   POKE R1L,$23:POKE R1H,$9F:POKE R0L,$00:POKE R0H,$BC
   POKE R2L, 0:POKE R2H, $03:BANK 10
   SYS MEM.COPY
   ## HERE We grab a single PETSCII character back to the Font.. The DIAMOND
     OB=PEEK(1):BANK PEEK(0),6:CA=$C2D0:VA=$F748
       FOR I=0 TO 7
           X=PEEK(CA+I):VPOKE 1,VA+I,X
       NEXT I
   BANK OB2,OB
   GOTO FIXCURSOR



SET.VGATextColors:
   POKE $9F20, 0:POKE $9F21, $FA:POKE $9F22, %00010001
   RESTORE VGATEXTCOLORS
   FOR I=0 TO 31:READ C:POKE $9F23, C:NEXT:COLOR 15:RETURN

#INCLUDE "VGATEXT.BI"

HIDEALL:
  GOSUB HIDEGRAPHICS:GOTO HIDETEXT
SHOWALL:
  GOSUB SHOWGRAPHICS:GOTO SHOWTEXT

HIDEGRAPHICS:
  POKE VERA.DCVIDEO, PEEK(VERA.DCVIDEO) AND LAYER0.OFF:RETURN

SHOWGRAPHICS:
  POKE VERA.DCVIDEO, PEEK(VERA.DCVIDEO) OR LAYER0.ON:RETURN

HIDETEXT:
  POKE VERA.DCVIDEO, PEEK(VERA.DCVIDEO) AND LAYER1.OFF:RETURN

SHOWTEXT:
  POKE VERA.DCVIDEO, PEEK(VERA.DCVIDEO) OR LAYER1.ON:RETURN

FILEEXISTS:
  OPEN 2,DEVICE,2,F$+",S,R":CLOSE 2
  GOSUB GETFILECODE
  FE%=(FCode<=20):RETURN

SET.LINE.END:
   FOR I=0 TO -1 STEP 0
       GET# 4, X$
       C=ASC(X$)
       I=(C=13 OR C=10)
   NEXT I
   IF C=10 THEN LINE.ENDING = 10:RETURN
   LINE.ENDING=13
   GET# 4, X$
   IF X$=CHR$(10) THEN IS.WINDOWS.FILE=-1
   RETURN

POSITION:
  COMMAND$="P"+CHR$(CHANNEL)+CHR$(P0)+CHR$(P1)+CHR$(P2)+CHR$(P3)

DOS.CMD:
 OPEN 15,DEVICE,15, COMMAND$
 GOTO GETFCODE

GETFILECODE:
  OPEN 15,8,15
GETFCODE:
  INPUT#15,FCode,FC$,A,B:CLOSE 15:RETURN

FIXCURSOR:
  FBASE=$9F*8+$F000
  FOR X=0 TO 6:VPOKE 1,FBASE+X,0:NEXT X
  VPOKE 1,FBASE+7,$FF
  RETURN

CHECK.FOR.FILE:
  OB = PEEK(0)
  BANK 0
  WORKBANK = PEEK($BFFE)
  BANK WORKBANK
  SAddr=$BD00:GOSUB PEEK.STRING
  THEFILE$=""
  File.TCheck = (S$="LOADFILE:")
  IF File.TCheck THEN SAddr=$BD10:GOSUB PEEK.STRING:THEFILE$=S$:S$="DONEREAD:":SAddr=$BD00:GOSUB POKE.STRING
  SAddr = $BE00:GOSUB PEEK.STRING
  LOAD.RETURN = (S$="MYLOADER:")
  IF LOAD.RETURN THEN SAddr=$BE10:GOSUB PEEK.STRING:My.Loader$=S$:POKE $BE00,.
  BANK OB
RETURN

CLEANUP.AND.END:
 CLOSE 4
 OPEN 15,8,15
 INPUT# 15, E,EM$,T,S
 CLOSE 15
 COLOR 0,0:CLS
 MYMODE=0:GOSUB NOFLICKERSCREEN
 COLOR 0,0:CLS
 F$=My.Loader$:GOSUB FILEEXISTS
 BANK ORIGBANK1, ORIGBANK2
 IF FE% AND LOAD.RETURN THEN LOAD My.Loader$
 GOSUB SETDEFAULTPALETTE
 COLOR 1,6:CLS:BANNER:END

PEEK.STRING:
 L=PEEK(SAddr):IF L=0 THEN S$="":RETURN
 S$=RPT$(32,L)
 ADDR=SAddr+1
 POKE 2, FN LO.Byte(ADDR)
 POKE 3, FN HI.Byte(ADDR)
 P=POINTER(S$)
 POKE 4, PEEK(P+1)
 POKE 5, PEEK(P+2)
 POKE 6, L
 POKE 7, 0
 SYS $FEE7
 RETURN

POKE.STRING:
 L=LEN(S$)
 Addr=SAddr+1
 POKE SAddr, L
 POKE R1L, FN LO.Byte(Addr)
 POKE R1H, FN HI.Byte(Addr)
 P=POINTER(S$)
 POKE R0L, PEEK(P+1)
 POKE R0H, PEEK(P+2)
 POKE R2L, L
 POKE R2H, 0
 SYS MEM.COPY
 RETURN

SETDEFAULTPALETTE:
  F$="DPAL.BIN":GOSUB FILEEXISTS
  IF FE% THEN BVLOAD F$,DEVICE,1,$FA00:RETURN
  POKE $9F20,00
  POKE $9F21,$FA
  POKE $9F22,%00010001
  V.DATA=$9F23
  RESTORE DEFPALDATA
  FOR I = 1 TO 512:READ C:POKE V.DATA, C:NEXT
  RETURN

DEFPALDATA:
 DATA 0,0,255,15,0,8,254,10,76,12,197,0,10,0,231,14,133,13,64,6,119,15,51,3,119,7,246,10,143,0,187,11,0,0,17,1,34,2,51,3,68,4,85,5,102,6,119,7,136,8,153,9,170,10,187,11,204,12,221,13,238
 DATA 14,255,15,17,2,51,4,68,6,102,8,136,10,153,12,187,15,17,2,34,4,51,6,68,8,85,10,102,12,119,15,0,2,17,4,17,6,34,8,34,10,51,12,51,15,0,2,0,4,0,6,0,8,0,10,0,12,0,15,33,2,67,4,100,6,134,8
 DATA 168,10,201,12,235,15,17,2,50,4,83,6,116,8,149,10,182,12,215,15,16,2,49,4,81,6,98,8,130,10,163,12,195,15,16,2,48,4,64,6,96,8,128,10,144,12,176,15,33,1,67,3,100,5,134,7,168,9,201,11,251
 DATA 13,33,1,66,3,99,4,132,6,165,8,198,9,247,11,32,1,65,2,97,4,130,5,162,6,195,8,243,9,32,1,64,2,96,3,128,4,160,5,192,6,240,7,33,1,67,3,101,4,134,6,168,8,202,9,252,11,33,1,66,2,100,3,133
 DATA 4,166,5,200,6,249,7,32,0,65,1,98,1,131,2,164,2,197,3,246,3,32,0,65,0,97,0,130,0,162,0,195,0,243,0,34,1,68,3,102,4,136,6,170,8,204,9,255,11,34,1,68,2,102,3,136,4,170,5,204,6,255,7,34
 DATA 0,68,1,102,1,136,2,170,2,204,3,255,3,34,0,68,0,102,0,136,0,170,0,204,0,255,0,18,1,52,3,86,4,104,6,138,8,172,9,207,11,18,1,36,2,70,3,88,4,106,5,140,6,159,7,2,0,20,1,38,1,56,2,74,2,92
 DATA 3,111,3,2,0,20,0,22,0,40,0,42,0,60,0,63,0,18,1,52,3,70,5,104,7,138,9,156,11,191,13,18,1,36,3,54,4,72,6,90,8,108,9,127,11,2,1,20,2,22,4,40,5,42,6,60,8,63,9,2,1,4,2,6,3,8,4,10,5,12,6
 DATA 15,7,18,2,52,4,70,6,104,8,138,10,156,12,190,15,17,2,35,4,53,6,71,8,89,10,107,12,125,15,1,2,19,4,21,6,38,8,40,10,58,12,60,15,1,2,3,4,4,6,6,8,8,10,9,12,11,15

REM 512  BYTES CONVERTED
