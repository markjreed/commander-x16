

LOAD.SPRITE.IMAGE:
 IF SUPPRESS.SPRITE.HANDLING THEN RETURN
 STAT.LINE=3:STAT.MSG$="CLEARING GRAPHICSBUFFER":GOSUB SHOW.STATMSG
 GOSUB CLEAR.GRAPHICSBUFFER
SKIP.GRAPHICS.CLEAR:
 SPR.FILENAME$=BMXFILE$+".SPRITES":PAL.FILENAME$=SPR.FILENAME$+".PAL"

 F$=SPR.FILENAME$:GOSUB FILEEXISTS:F1%=FE%
 F$=PAL.FILENAME$:GOSUB FILEEXISTS
 IF F1% AND FE% THEN DISPLAY.SPRITEFILE

## LOAD NECESSARY MACHINE HELPERS TO CREATE THE SPRITE FILES

  STAT.LINE=2
  STAT.MSG$="{GREY 1}PROCESSING{RED}: "+BMXFILE$:GOSUB SHOW.STATMSG
  STAT.LINE=1:STAT.MSG$="{GREY 1}LOAD BMX":GOSUB SHOW.STATMSG
  GOSUB LOADBMX:STAT.MSG$="BMX DONE":GOSUB SHOW.STATMSG
  GOSUB CREATE.SPRITE.FILES:GOSUB LOAD.CREATED.FILES:GOSUB CLEANUP.TEMPFILES
  F$=PAL.FILENAME$:STAT.LINE=2:STAT.MSG$ ="{GREY 1}SAVING: {RED}"+PAL.FILENAME$:GOSUB SHOW.STATMSG
  GOSUB SAVEPAL2FILE:GOSUB CLEAR.STATMSG:F$=BMXFILE$+".SPRITES"
  STAT.MSG$="{GREY 1}SAVING: {RED}"+F$:GOSUB SHOW.STATMSG:GOSUB SAVESCREEN:GOSUB CLEAR.STATMSG
  GOTO SKIP.S.LOAD

DISPLAY.SPRITEFILE:
 IF SUPPRESS.SPRITE.HANDLING THEN RETURN
 GOSUB LOAD.EXISTING.SPRITEFILE
SKIP.S.LOAD:
 GOSUB SET.SPRITE.ATTRIBUTES:GOSUB IMAGE.SPRITES.ON
 STAT.LINE = 3:STAT.MSG$="RETURNING":GOTO SHOW.STATMSG

IMAGE.SPRITES.OFF:
  IF SUPPRESS.SPRITE.HANDLING THEN RETURN
  FOR I=1 TO 25:SPRITE I,0:NEXT:RETURN

LOADBMX:
    GOSUB CLEAR.GRAPHICSBUFFER
    BMX.HDR$=RPT$(32,32)
    SSAVE = STAT.LINE
    STAT.LINE = 3:STAT.MSG$="LOADING: "+BMXFILE$:GOSUB SHOW.STATMSG
    STAT.LINE = SSAVE
    CLOSE 4
     OPEN 4,8,4,BMXFILE$+",S,R"
     POKE X.REG, 4
     SYS CHKIN
     POKE A.REG, 32
## GET A POINTER TO THE BMX.HDR STRING THEN PEEK
## IT FOR THE ADDRESS TO THE STRING DATA
     A=POINTER(BMX.HDR$)+1
     POKE X.REG, PEEK(A)
     POKE Y.REG, PEEK(A+1)
     POKE C.REG, 0
     SYS MACPTR
     SYS CLRCHN
     WASERROR = 0
     DOSHOW = 0
     GOSUB PARSEHEADER
     IF BMX.ID$<>"BMX" THEN ERRMSG$= "{RED}"+F$+"{GREY 1} IS NOT A BMX FILE":GOTO ERR.EXIT1
     IF BMX.BITS<>8 THEN ERRMSG$= "{RED}"+STR$(BMX.BITS)+"{GREY 1} BITS NOT SUPPORTED":GOTO ERR.EXIT1
     IF BMX.VER<>1 THEN ERRMSG$= "{RED}"+F$+"{GREY 1} IS VERSION:{RED}"+STR$(BMX.VER)+"{GREY 1} NOT SUPPORTED!":GOTO ERR.EXIT1
     IF BMX.WIDTH > 320 THEN ERRMSG$= "{RED}"+STR$(BMX.WIDTH)+"{GREY 1} WIDTH NOT CURRENTLY SUPPORTED":GOTO ERR.EXIT1
     POKE R0L, FN Lo.Byte(BMX.WIDTH)
     POKE R0H, FN Hi.Byte(BMX.WIDTH)
     POKE R1L, FN Lo.Byte(BMX.HEIGHT)
     POKE R1H, FN Hi.Byte(BMX.HEIGHT)
     POKE R2L, BMX.PALUSED
     POKE R2H, BMX.FIRSTPAL
     BANK 4
     SYS $A019
     CLOSE 4
     GOSUB SET.VGATextColors
RETURN

ERR.EXIT1:
 CLOSE 4:SYS CLRCHN
ERR.EXIT:
 PRINT:PRINT " ";ERRMSG$:WASERROR=-1:RETURN


CREATE.SPRITE.FILES:
   GOSUB GetCWD
   RETURN.DIR$=CWD$
RETRYDIR:
   COMMAND$="CD:" + "MAKE.GLYP"
   GOSUB DOS.CMD
   IF FCODE < 20 THEN PROCEEDGLYPHS
   COMMAND$="MD:" + "MAKE.GLYP"
   GOSUB DOS.CMD
   GOTO RETRYDIR

PROCEEDGLYPHS:
   STAT.MSG$= "{YEL}CREATING: {WHT} SPRITE FILES":GOSUB SHOW.STATMSG
   X1=0:Y1=0:SPR.LINES=64
   FOR JI = 1 TO 15
     F$="GLYPH"+MID$(STR$(JI),2)+".BIN"
     X1%=X1
     GOSUB GRABSPRITE
     X1=X1+64
     IF X1>=320 THEN X1=O:Y1=Y1+64
   NEXT

   SPR.LINES = 32
   FOR JI = 16 TO 20
     F$="GLYPH"+MID$(STR$(JI),2)+".BIN"
     X1%=X1
     GOSUB GRABSPRITE
     X1=X1+64
   NEXT

   X1=O:Y1=Y1+32
   SPR.LINES = 16
   FOR JI = 21 TO 25
     F$="GLYPH"+MID$(STR$(JI),2)+".BIN"
     X1%=X1
     GOSUB GRABSPRITE
     X1=X1+64
   NEXT
RETURN


GRABSPRITE:
  OPEN 2,8,2,"@:"+F$+",P,W"
  A = POINTER(X1%)
  POKE R0H, PEEK(A)
  POKE R0L, PEEK(A+1)
  POKE R1L, Y1
  POKE R1H, 0
  POKE X.REG, 2
  POKE R15L, SPR.LINES
  SYS $600
  CLOSE 2
  RETURN


LOAD.CREATED.FILES:
  STAT.MSG$="{LIGHT GREEN}LOADING {WHT} SPRITE FILES":GOSUB SHOW.STATMSG
  VADDR = 0
  VBANK = 0

  FOR I = 1 TO 15
    SUFFIX$=MID$(STR$(I),2)
    F$="GLYPH"+SUFFIX$+".BIN"
    STAT.MSG$="LOAD: "+F$:GOSUB SHOW.STATMSG
    BVLOAD F$,8,VBANK,VADDR
    COMMAND$="S:"+F$
    STAT.MSG$ = COMMAND$:GOSUB SHOW.STATMSG
    GOSUB DOS.CMD
    VADDR = VADDR+4096
  NEXT I

  FOR I = 16 TO 20
    SUFFIX$=MID$(STR$(I),2)
    F$="GLYPH"+SUFFIX$+".BIN"
    STAT.MSG$ = "LOAD: "+F$:GOSUB SHOW.STATMSG
    BVLOAD F$,8,VBANK,VADDR
    COMMAND$="S:"+F$
    STAT.MSG$=COMMAND$:GOSUB SHOW.STATMSG
    GOSUB DOS.CMD
    VADDR = VADDR+2048
    IF VADDR>=$FFFF THEN VBANK=1:VADDR=0
  NEXT I

  FOR I = 21 TO 25
    SUFFIX$=MID$(STR$(I),2)
    F$="GLYPH"+SUFFIX$+".BIN"
    STAT.MSG$ = "LOAD: "+F$:GOSUB SHOW.STATMSG
    BVLOAD F$,8,VBANK,VADDR
    COMMAND$="S:"+F$
    STAT.MSG$=COMMAND$:GOSUB SHOW.STATMSG
    GOSUB DOS.CMD
    VADDR = VADDR+1024
  NEXT I
  GOSUB CLEAR.STATMSG
RETURN

CLEANUP.TEMPFILES:
  COMMAND$="CD:.."
  STAT.MSG$="{GREY 1}EXECUTING: {RED}"+COMMAND$:GOSUB SHOW.STATMSG
  GOSUB DOS.CMD
  COMMAND$="RD:"+ "MAKE.GLYP"
  STAT.MSG$="{GREY 1}EXECUTING: {RED}"+COMMAND$:GOSUB SHOW.STATMSG
  GOSUB DOS.CMD
RETURN

LOAD.EXISTING.SPRITEFILE:
  STAT.LINE=1:STAT.MSG$="LOADING : "+SPR.FILENAME$:GOSUB SHOW.STATMSG
  BVLOAD SPR.FILENAME$,8,0,0
  STAT.LINE=2:STAT.MSG$="LOADING : "+PAL.FILENAME$:GOSUB SHOW.STATMSG
  BVLOAD PAL.FILENAME$,8,1,$FA00
  GOSUB SET.VGATextColors
  FOR STAT.LINE=1 TO 2:GOSUB CLEAR.STATMSG:NEXT
  RETURN

SET.SPRITE.ATTRIBUTES:
  VAddr = 0:VBANK = 0
  IF Sprites.Positioned THEN IMAGE.SPRITES.ON
  FOR I =1 TO 15
    SPRMEM I,VBANK,VAddr
    SPRITE I,0,0,0,3,3,1:VAddr=VAddr+4096
  NEXT I

  FOR I =16 TO 20
    SPRMEM I,VBANK,VAddr
    SPRITE I,0,0,0,3,2,1:VAddr=VAddr+2048
    IF VAddr >= $FFFF THEN VBANK=1:VAddr=0
  NEXT I

  FOR I =21 TO 25
    SPRMEM I,VBANK,VAddr
    SPRITE I,0,0,0,3,1,1:VAddr=VAddr+1024
  NEXT I
RETURN


IMAGE.SPRITES.ON:
  IF SPRITES.POSITIONED THEN ON.ONLY
  X.origin = 288
  X1 = X.origin:Y1 = 53
  BCOUNT = 0
  FOR I = 1 TO 15
    MOVSPR I,X1,Y1
    SPRITE I,3:X1=X1+64:BCOUNT=BCOUNT+1
    IF BCOUNT=5 THEN BCOUNT=0:X1=X.origin:Y1=Y1+64
  NEXT I

  FOR I = 16 TO 25
    MOVSPR I,X1,Y1
    SPRITE I,3:X1=X1+64:BCOUNT=BCOUNT+1
    IF BCOUNT = 5 THEN BCOUNT=0:X1=X.origin:Y1=Y1+32
  NEXT I
  SPRITES.POSITIONED=-1
RETURN

ON.ONLY:
 FOR I=1 TO 25:SPRITE I,3:NEXT:RETURN


PARSEHEADER:
    BMX.ID$=LEFT$(BMX.HDR$,3):BMX.VER=ASC(MID$(BMX.HDR$,4,1))
    BMX.BITS=ASC(MID$(BMX.HDR$,5,1)):BMX.VERA.REG=ASC(MID$(BMX.HDR$,6,1))
    BMX.WIDTH=ASC(MID$(BMX.HDR$,7,1)) + (ASC(MID$(BMX.HDR$,8,1))*256)
    BMX.HEIGHT=ASC(MID$(BMX.HDR$,9,1)) + (ASC(MID$(BMX.HDR$,10,1))*256)
    BMX.PALUSED=ASC(MID$(BMX.HDR$,11,1)):BMX.FIRSTPAL = ASC(MID$(BMX.HDR$,12,1))
    BMX.FILE.OFFSET=ASC(MID$(BMX.HDR$,13,1))+(ASC(MID$(BMX.HDR$,14,1))*256)
    BMX.COMPRESS= ASC(MID$(BMX.HDR$,15,1)):RETURN


SAVEPAL2FILE:
  FF$="@:"+F$+",S,W"
  OPEN 5,8,5,FF$
  POKE X.REG,5:SYS CHKOUT
  POKE VERA.LOWADDR,0
  POKE VERA.MIDADDR,$FA
  POKE VERA.HIADDR, %00010001
  FOR I = 1 TO 4
     POKE C.REG,1:POKE A.REG, 128
     POKE X.REG,$23:POKE Y.REG, $9F
     SYS MCIOUT
  NEXT
  SYS CLRCHN:CLOSE 5:RETURN

SAVESCREEN:
  FF$="@:"+F$ + ",P,W"
DOIT:
  OPEN 2,8,2,FF$:POKE A.REG,2:POKE$9F25,0:POKE$9F20,0:POKE$9F21,0:POKE$9F22,$10:SYS$700:CLOSE 2
  RETURN



DEBUG.MSG:
 IF DEBUG.OFF THEN RETURN
 GOSUB SaveCursor.AndColor
 COLOR VGA.WHITE, BLACK
 LOCATE 1,1:PRINT DMSG$;
 IF LEN(DMSG$)<80 THEN PRINT RPT$(32,79-LEN(DMSG$));
 LOCATE 2,1:PRINT "DELAY"
 SLEEP 200
 GOTO RestoreCursor.AndColor
