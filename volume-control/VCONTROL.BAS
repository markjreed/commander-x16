#CONTROLCODES 1
#INCLUDE "BOOKS.DEF"

SAVEBANK=HI.Bank-1

StartPCM.Play = $A041
BIT16.ON = %00100000
STEREO.ON = %00010000

SCREEN 0:COLOR 1,0:CLS
PRINT "{ISO ON}"
ShowSplash = 0

F$="NOSPLASH":GOSUB FILEEXISTS
S4=FE%
IF S4 THEN SHORT.IT
F$="BMXA000.BIN":GOSUB FILEEXISTS
S1=FE%
F$="WAVMODULE.BIN":GOSUB FILEEXISTS
S2=FE%
F$="SPLASH.BMX":GOSUB FILEEXISTS
S3=FE%

SHORT.IT:
 ShowSplash = (S1 AND S2 AND S3) AND (NOT S4)


RESTORE FILELIST.MANDATORY
READ CHECKFILE$
FOR I=0 TO -1 STEP 0
    PRINT "{WHT}Checking for: {LIGHT GREEN}";CHECKFILE$;"{YEL}..";
    F$=CHECKFILE$:GOSUB FILEEXISTS
    IF FE% THEN PRINT "Found..{LIGHT GREEN}!{WHT}"
    IF NOT FE% THEN FILE.NOT.FOUND
    IF RIGHT$(CHECKFILE$,4)=".BIN" THEN GOSUB LOADIT
    READ CHECKFILE$
    I=(CHECKFILE$="DONEFILES")
    PRINT
NEXT

IF ShowSplash THEN GOSUB DoSplash.Screen
GOTO START.POKES

LOADIT:
 READ BankNum
 READ Addr
 PRINT "{WHT}Loading {LIGHT GREEN}";CHECKFILE$;"{YELLOW} BANK:{LIGHT RED}";HEX$(BankNum);"{YELLOW} Addr:{LIGHT RED}";HEX$(Addr)
 BLOAD CHECKFILE$,DEVICE,BankNum,Addr
 RETURN

START.POKES:
If ShowSplash THEN Skip3
 PRINT "{WHT}STOP HANDLER ROUTINE: {LIGHT GREEN}";
Skip3:
 RESTORE STOPHANDLER3:GOSUB POKEMLROUTINE

## DISABLE STOP ON CTRL/C
SYS $0620

IF ShowSplash THEN Skip1
  PRINT "{WHT}{CR}{CR}"
  PRINT "{LIGHT GREEN}  LOADING MACHINE LANGUAGE HELPERS"
  PRINT "{YEL}  --------------------------------"
  PRINT "{WHT}{CR}"
  PRINT "{WHT}SPRITE GRAB ROUTINE: {LIGHT GREEN}";
Skip1:
 RESTORE BVGRABSPRITE:GOSUB POKEMLROUTINE

If ShowSplash THEN Skip2
  PRINT "{WHT}GRAPHICS SCREEN SAVER ROUTINE: {LIGHT GREEN}";
Skip2:
  RESTORE BVSAVE:GOSUB POKEMLROUTINE

If ShowSplash THEN Skip5
  PRINT "{WHT}MOUSE HANDLING ROUTINE: {LIGHT GREEN}";

Skip5:
  RESTORE MOUSER:GOSUB POKEMLROUTINE
  GOSUB GetCWD$
  MyRootDir$=CWD$
  GOSUB PUT.V.IDENT
  IF NOT ShowSplash THEN PRINT "Storing My Root Dir: ";MyRootDir$
  GOSUB STORE.ProgramRoot
  GOSUB SET.ThinCP437

IF ShowSplash THEN Skip4
  PRINT
  PRINT "{GREY 1}Loading Volume Control"
  GOTO DOLOADIT
Skip4:
  SLEEP 90
  FOR A=0 TO 511:VPOKE 1,$FA00+A,0:NEXT
  RECT 0,0,319,239,0
  COLOR 0,0:SLEEP:CLS


DOLOADIT:
## r13h poke is DefaultVolume
  POKE R13H, 13
  GOSUB Set.VGATextColors
  VPOKE 1,$FA0C,0
  VPOKE 1,$FA0D,0
  SLEEP
  SCREEN 0
LOAD "BOOKMENU.PRG"


DoSplash.Screen:
  GOSUB Check.Runs
  IF NOT ShowSplash THEN RETURN
  COLOR 0,0:CLS
  POKE VERA.LOWADDR, 0
  POKE VERA.MIDADDR, $FA
  POKE VERA.HIADDR, %00010001
  POKE R0L, $23
  POKE R0H, $9F
  POKE R1H, $02
  POKE R1L, 0
  POKE A.REG, 0
  SYS MEM.FILL
  SCREEN $80
  BMXFILE$="SPLASH.BMX"
  GOSUB LOADBMX
  GOSUB TestFileSystem
  WAVFILE$="SPLASH.WAV"
  GOSUB Play.Wave.File
RETURN

Check.Runs:
  DOIT=0
  F$="VCONTROL.RUNS":GOSUB FILEEXISTS
  IF NOT FE% THEN Start.Runs
  OPEN 7,8,7,"VCONTROL.RUNS,S,R"
  INPUT# 7, RUNS
  CLOSE 7
  IF RUNS < 3 THEN INC.RUNS
  CLS
  Msg.Delay=600
  LOCATE 2,2:PRINT "{LIGHT GREEN}F1 {YEL}- {GREY 1}To {WHT}Disable{GREY 1} Splash Screen"
  IF RUNS > 4 THEN Msg.Delay = 400
  IF RUNS > 6 THEN Msg.Delay = 180
  IF RUNS > 8 THEN Msg.Delay = 90
  IF RUNS > 10 THEN Msg.Delay = 60
  IF RUNS > 12 THEN Msg.Delay = 30
  CTIMER = TI+Msg.Delay
  FOR I=0 TO -1 STEP 0
     GET X$
     IF X$=CHR$(133) THEN CTIMER=TI-1:DOIT=-1
     I=(TI > CTIMER)
  NEXT
  IF DOIT THEN OPEN 7,8,7,"@:NOSPLASH,S,W":PRINT# 7, "NOSPLASH":CLOSE 7:ShowSplash=0:COMMAND$="S:VCONTROL.RUNS":GOTO DOS.CMD
  CLS
INC.RUNS:
  RUNS=RUNS+1:GOTO PRINT.RUNS
Start.Runs:
  RUNS=1
PRINT.RUNS:
  OPEN 7,8,7,"@:VCONTROL.RUNS,S,W"
  PRINT# 7, RUNS
DONE.CHECK.RUNS:
  CLOSE 7
RETURN


POKEMLROUTINE:
  READ PAddr
  READ C
  PRINTIT = NOT ShowSplash
  FOR I = 0 TO -1 STEP 0
      IF PRINTIT THEN PRINT ".";
      POKE PAddr, C
      PAddr = PAddr + 1
      READ C
      I = (C<0)
  NEXT
  IF NOT ShowSplash THEN PRINT:PRINT
  RETURN


## 48 BYTES
STOPHANDLER:
DATA $620,234,173,40,3,141,70,6,173,41,3,141,71,6,120,169,69,141,40,3,169,6,141,41,3,173,32,6,141,75,6,169,96,141,32,6,88,96,32,255,255,169,3,96,96,120,173,70,6,141,40,3,173,71,6,141,41,3,173
DATA 75,6,141,32,6,169,96,141,75,6,88,96,-1

STOPHANDLER2:
DATA $620,234,169,0,133,112,173,40,3,141,74,6,173,41,3,141,75,6,120,169,73,141,40,3,169,6,141,41,3,173,32,6,141,81,6,169,96,141,32,6,88,96,32,255,255,169,27,133,112,96,96,120,173,74,6,141
DATA 40,3,173,75,6,141,41,3,173,81,6,141,32,6,169,96,141,81,6,88,96,-1

STOPHANDLER3:
DATA $620,234,169,0,133,112,173,40,3,141,74,6,173,41,3,141,75,6,120,169,73,141,40,3,169,6,141,41,3,173,32,6,141,86,6,169,96,141,32,6,88,96,32,255,255,240,3,169,3,96,169,27,133,112,96,96
DATA 120,173,74,6,141,40,3,173,75,6,141,41,3,173,86,6,141,32,6,169,96,141,86,6,88,96,-1

## 29 BYTES
BVGRABSPRITE:
  DATA $600,$20,$C9,$FF,$20,$FF,$FE,$A2,$23,$A0,$9F,$A9,$40,$38,$20,$B1,$FE
  DATA $C6,$20,$F0,$05,$20,$02,$FF,$80,$ED,$20,$CC,$FF,$60,-1

## 75 BYTES
BVSAVE:
   DATA $700,$AA,$20,$C9,$FF,$9C,$4B,$07,$A9,$2C,$8D,$4C,$07,$A9,$01,$8D,$4D,$07,$A2
   DATA $23,$A0,$9F,$AD,$4B,$07,$38,$20,$B1,$FE,$B0,$29,$8E,$4E,$07,$AD,$4B,$07
   DATA $38,$ED,$4E,$07,$8D,$4B,$07,$AD,$4C,$07,$8C,$4E,$07,$ED,$4E,$07,$8D,$4C
   DATA $07,$AD,$4D,$07,$E9,0,$8D,$4D,$07,$0D,$4B,$07,$0D,$4C,$07,$D0,$CA,$20
   DATA $CC,$FF,$60,-1

MOUSER:
   DATA $760,162,30,32,107,255,218,162,3,70,33,102,32,70,31,102,30,202,208,245,230,30,230,32,250,96,-1


FILELIST.MANDATORY:
 DATA "BMXA000.BIN",4,$A000,"WAVMODULE.BIN",3,$A000,"SHELLSORT.BIN",1,$400,"PLAYBOOK.PRG","BOOKMENU.PRG","T1.SPR","T2.SPR","T3.SPR"
 DATA "CLEANUP.PRG","DONEFILES"

FILELIST.OPTIONAL:
 DATA "DPAL.BIN"


FILE.NOT.FOUND:
  PRINT "{BELL}":PRINT:PRINT:PRINT:PRINT "{BELL}"
  PRINT "{LIGHT RED}";CHECKFILE$;"{WHT} NOT FOUND !"
  PRINT
  PRINT "PLEASE CHECK YOUR INSTALLATION"
  END

LOADBMX:
     BMX.HDR$=RPT$(32,32)
     OPEN 4,DEVICE,4,BMXFILE$+",S,R"
     POKE X.REG, 4
     SYS CHKIN
     POKE A.REG, 32
## GET A POINTER TO THE BMX.HDR STRING THEN PEEK
## IT FOR THE ADDRESS TO THE STRING DATA
     A=POINTER(BMX.HDR$)+1
     POKE X.REG, PEEK(A)
     POKE Y.REG, PEEK(A+1)
     POKE C.REG, 0
     SYS MACPTR
     SYS CLRCHN
     WASERROR = 0
     DOSHOW = 0
     GOSUB PARSEHEADER
     IF BMX.ID$<>"BMX" THEN ERRMSG$= "{RED}"+BMXFILE$+"{WHT} IS NOT A BMX FILE":GOTO ERR.EXIT1
     IF BMX.BITS<>8 THEN ERRMSG$= "{RED}"+STR$(BMX.BITS)+"{WHT} BITS NOT SUPPORTED":GOTO ERR.EXIT1
     IF BMX.VER<>1 THEN ERRMSG$= "{RED}"+BMXFILE$+"{WHT} IS VERSION:{RED}"+STR$(BMX.VER)+"{WHT} NOT SUPPORTED!":GOTO ERR.EXIT1
     IF BMX.WIDTH > 320 THEN ERRMSG$= "{RED}"+STR$(BMX.WIDTH)+"{WHT} WIDTH NOT CURRENTLY SUPPORTED":GOTO ERR.EXIT1
     POKE R0L, FN Lo.Byte(BMX.WIDTH)
     POKE R0H, FN Hi.Byte(BMX.WIDTH)
     POKE R1L, FN Lo.Byte(BMX.HEIGHT)
     POKE R1H, FN Hi.Byte(BMX.HEIGHT)
     POKE R2L, BMX.PALUSED
     POKE R2H, BMX.FIRSTPAL
     BANK 4
     SYS $A019
     CLOSE 4
RETURN

ERR.EXIT1:
 SCREEN 1
 PRINT "BMX ERROR: ";ERRMSG$
 CLOSE 4:SYS CLRCHN
 END
ERR.EXIT:
 PRINT:PRINT " ";ERRMSG$:WASERROR=-1:RETURN

PLAY.Wave.File:
   TextVisible = 0
   F$=WAVFILE$
   GOSUB FILEEXISTS
   IF NOT FE% THEN RETURN
   GOSUB LoadWAVEHeader
   GOSUB ParseRIFFHeader
   IF NOT IsWave THEN RETURN
   UserEnded = 0
   PAUSED = 0
   IF FASTMODE AND (NOT IsHostFS) THEN DOS "U0>B0"
   FillLoopCount = 4
   IF IsHostFS THEN FillLoopCount = 12
   IF BytesPerSecond > 79999 THEN FillLoopCount = FillLoopCount+1
   IF BytesPerSecond > 120000 THEN FillLoopCount = FillLoopCount+1
   IF BytesPerSecond > 120000 AND (FASTMODE AND (NOT IsHostFS)) THEN DOS "U0>B3"
   POKE R13L, TextVisible
   POKE A.REG, FillLoopCount
   POKE X.REG, 6
   POKE R0L, VERA.RATE
   POKE R0H, VERA.CFG
   POKE R1L, 0
   BANK 3
   TI = SAVETIMER
   SYS StartPCM.Play
   GOSUB SHOWTEXT
RETURN


PARSEHEADER:
  BMX.ID$=LEFT$(BMX.HDR$,3)
  BMX.VER=ASC(MID$(BMX.HDR$,4,1))
  BMX.BITS = ASC(MID$(BMX.HDR$,5,1))
  BMX.VERA.REG=ASC(MID$(BMX.HDR$,6,1))
  BMX.WIDTH = ASC(MID$(BMX.HDR$,7,1)) + (ASC(MID$(BMX.HDR$,8,1))*256)
  BMX.HEIGHT = ASC(MID$(BMX.HDR$,9,1)) + (ASC(MID$(BMX.HDR$,10,1))*256)
  BMX.PALUSED = ASC(MID$(BMX.HDR$,11,1))
  BMX.FIRSTPAL = ASC(MID$(BMX.HDR$,12,1))
  BMX.FILE.OFFSET = ASC(MID$(BMX.HDR$,13,1))+(ASC(MID$(BMX.HDR$,14,1))*256)
  BMX.COMPRESS= ASC(MID$(BMX.HDR$,15,1))
  RETURN

ParseRIFFHeader:
  IsWave = (LEFT$(RIFFHDR$,4) = "RIFF") AND (MID$(RIFFHDR$,9,4)="WAVE")
  PCMBits = ASC(MID$(RIFFHDR$,35,1))
  TMP1 = ASC(MID$(RIFFHDR$,21,1))
  TMP2 = ASC(MID$(RIFFHDR$,22,1))
  NumChannels = ASC(MID$(RIFFHDR$,23,1))
  TMP4 = (TMP1) + (256*TMP2)
  IsPCM = (TMP4=1)
  TMP1 = ASC(MID$(RIFFHDR$,25,1))
  TMP2 = ASC(MID$(RIFFHDR$,26,1)) * 256
  TMP3 = ASC(MID$(RIFFHDR$,27,1)) * 65536
  SampleRate = TMP1+TMP2+TMP3
  VERA.RATE = FN ROUND((SampleRate / 48828.15) * 128)
  IsStereo = (NumChannels=2)
  IsSupported = (IsWave AND (PCMBits=16)) AND IsPCM AND ((NumChannels > 0) AND (NumChannels < 3))
  VERA.CFG=0
  IF NOT IsSupported THEN RETURN
  VERA.CFG = (VERA.CFG OR BIT16.ON)
  IF IsStereo THEN VERA.CFG = (VERA.CFG OR STEREO.ON)
  VERA.CFG = VERA.CFG OR PCM.VOLUME
  BytesPerSecond = ((VERA.RATE/128) * 48828.15)*2
  IF IsStereo THEN BytesPerSecond = BytesPerSecond*2
  BytesPerSecond = FN ROUND(BytesPerSecond)
  RETURN

LoadWAVEHeader:
   RIFFHDR$ = RPT$(44,44)
   OPEN 6,8,6,F$+",S,R"
     POKE X.REG, 6
     SYS CHKIN
     POKE A.REG, 44
## GET A POINTER TO THE WAVEHDR STRING THEN PEEK
## IT FOR THE ADDRESS TO THE STRING DATA
     A=POINTER(RIFFHDR$)+1
     POKE X.REG, PEEK(A)
     POKE Y.REG, PEEK(A+1)
     POKE C.REG, 0
     SYS MACPTR
     SYS CLRCHN
     RETURN

TestFileSystem:
 F$="TESTFILE":GOSUB FILEEXISTS
 IF FE% THEN StartTest
 OPEN 2,8,2,"@:TESTFILE,S,W"
 FOR I = 1 TO 100
     PRINT# 2, "ABCDEFGHIJKLMN"
 NEXT I
 CLOSE 2
StartTest:
 OPEN 2,8,2,"TESTFILE,S,R"
 POKE X.REG,2
 SYS CHKIN
 BANK 62
 POKE X.REG,$00
 POKE Y.REG,$A0
 POKE C.REG, 0
 POKE A.REG, 0
 SYS MACPTR
 IsHostFS = (PEEK(Y.REG) = 1)
 SYS CLRCHN
 CLOSE 2
 RETURN


#INCLUDE "BOOKS.BI"
