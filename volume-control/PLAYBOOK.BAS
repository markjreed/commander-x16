#CONTROLCODES 1
SPRITE 0,0:MOUSE 0:COLOR 15,0:CLS
BL$=RPT$(32,34)
NOUGHT$="00"
PRINT "{CR}  ** LOADING BOOK **{CR}"
COLOR 10
PRINT "  F1";:COLOR 15
PRINT " - TOGGLES TEXT DISPLAY ";:COLOR 10:WAITTIME=TI+150
FOR I=0 TO -1 STEP 0
    SLEEP 2
    PRINT ".";
    I=(TI>WAITTIME)
NEXT

#INCLUDE "BOOKS.DEF"

FIFOFULL = %10000000
BIT16.ON = %00100000
STEREO.ON = %00010000
VOLMASK = %11110000
VOLMAX = %11111111
MaxVolume = 15
IsPaused = 0
IsFinished = 0
PlayFinished = 0
UserStop = 0
DIM SAVETIMER
StartPCM.Play = $A041
ContinuePCM.Play= $A019
BMX.BANKLOADER=$A019
BOOKDIR$="../"
ARROWS$=CHR$($80)+CHR$($18)+CHR$($80)+CHR$($19)
LR.ARROWS$=CHR$($80)+CHR$($1B)+CHR$($80)+CHR$($1A)
BOOK.Startup = -1
GOT.BOOKMARK = 0
INCHAPTER = 0
CLS
GOSUB VERIFY.GOOD.LOAD
S$="SAVEBANK: "+STR$(SAVEBANK):GOSUB DEBUG.PRINT
PCM.VOLUME = PEEK(R13H)
GOSUB GET.TARGET.DIR
GOSUB TestFileSystem
COMMAND$="CD:"+TargetDir$
GOSUB DOS.CMD
IF FCode > 20 THEN ERRMSG$="CAN'T CHANGE DIRECTORY "+TargetDir$:GOTO ERRORHALT.LOCAL

BMX.HDR$=RPT$(32,32)
BMX.HDRSIZE=32

GOSUB CLEAR.GRAPHICSBUFFER
GOSUB SAVE.SCREEN.MODE
VPOKE 1,$FA0C,0:VPOKE 1,$FA0D,0
IF SAVEDMODE<>$80 THEN GOSUB HIDEALL:SLEEP:SCREEN $80
GOSUB LoadDCharsCP437
COLOR 0:CLS
GOSUB SET.VGATextColors
RECT 0,0,319,239,0:GOSUB SHOWALL



GOSUB PLAYBOOK
COMMAND$="CD:.."
GOSUB DOS.CMD
GOSUB SHOWTEXT
FOR I=1 TO 8:CLOSE I:NEXT
GOTO EXIT.BOOKPLAY

ERRORHALT.LOCAL:
 GOSUB SHOWTEXT
 COLOR VGA.RED,VGA.WHITE
 SCREEN 1:PRINT ERRMSG$;RPT$(7,3);
 SLEEP 600
 COLOR VGA.WHITE,0

EXIT.BOOKPLAY:
 VPOKE 1,$FA0C,0:VPOKE 1,$FA0D,0
 SLEEP:SCREEN 0:CLS
 POKE R13H, PCM.VOLUME
 pad$="/"
 If MyRootDir$="/" THEN pad$=""
 LOAD MyRootDir$+pad$+"BOOKMENU.PRG"

PLAYBOOK:
  CHAPTER = 0
  BOOKDIR$=""
  SINGLE.CHAPTER = FALSE
  GOSUB LOADBOOK
  IF NOT SUCCESS THEN ERRMSG$="BOOK ERROR":GOTO ERRORHALT.LOCAL
  GOSUB CHECKART
  CHAPTER=0
  GOSUB CHECKBOOKMARK
  IF CHAPTER>0 THEN ENTER.CHAPTERS
  REM S$="CHECK BOOK DONE  "+STR$(CHAPTER):GOSUB DEBUG.PRINT
  IF CHAPTER=-3 THEN BOOK.DONE
  IF CHAPTER=-2 THEN PLAYSINGLE

  F$="INTRO.WAV":GOSUB FILEEXISTS
  IF FE% THEN GOSUB PLAY.INTRO
  IF USER.QUIT THEN EXIT.THE.BOOK
  CHAPTER=0
  IF NOT SINGLE.CHAPTER THEN CHAPLOOP
  BOOKDIR$=""
  GOTO PLAYSINGLE


CHAPLOOP:
  CHAPTER = CHAPTER + 1
ENTER.CHAPTERS:
  IF (CHAPTER>CHAPTERS) THEN BOOK.DONE
  BOOKDIR$="../"
  CHAPTER$=STR$(CHAPTER)
  CHAP$ = "CHAP" + MID$(STR$(CHAPTER),2)
  COMMAND$ = "CD:"+CHAP$
  GOSUB DOS.CMD
  IF FCode > 20 THEN PRINT "DONE ":RETURN
  INCHAPTER = TRUE
  GOSUB CHECKART
  BANK 3
  IF GOT.BOOKMARK OR CHAPTER=1 THEN GOSUB INFORMATION.BOX
  COLOR VGA.WHITE, VGA.DARKGRAY
  GOSUB ZERO.PPOS
  GOSUB PRINTCHAPTER
  GOSUB PLAYCHAPTER
  PCM.VOLUME = PEEK(AUDIO.Ctrl) AND 15
  IF NOT DO.QUIT THEN CHAPLOOP
  IF USER.QUIT THEN EXIT.THE.BOOK
  GOTO BOOK.DONE

PLAYSINGLE:
  REM S$="PLAY SINGLE  "+STR$(CHAPTER):GOSUB DEBUG.PRINT
  BOOKDIR$=""
  F$=BOOKFILE$:GOSUB FILEEXISTS
  IF NOT FE% THEN GOSUB SHOWTEXT:PRINT "NO FILE ";F$:GOSUB SHOWALL:GOTO ERRORHALT.LOCAL
  GOSUB ZERO.PPOS
  PLAYFILE$=BOOKFILE$
  REM S$="CALL INFORMATION BOX  "+STR$(CHAPTER):GOSUB DEBUG.PRINT
  GOSUB INFORMATION.BOX
  REM S$="CALL PLAY THE FILE  "+STR$(CHAPTER):GOSUB DEBUG.PRINT
  GOSUB Play.The.File
  IF USER.QUIT THEN EXIT.THE.BOOK

BOOK.DONE:
   REM S$="AT BOOK DONE":GOSUB DEBUG.PRINT
   BOOKDIR$=""
   F$="EPILOGUE.WAV":GOSUB FILEEXISTS
   IF FE% THEN GOSUB PLAY.EPILOGUE
EXIT.THE.BOOK:
  PCM.VOLUME = PEEK(AUDIO.Ctrl) AND 15
  IF NOT USER.QUIT THEN GOTO SCRATCH.BOOKMARK
  RETURN

PLAYCHAPTER:
  EXT$=".WAV"
  F$=CHAP$+EXT$:GOSUB FILEEXISTS
  IF NOT FE% THEN ERRMSG$="NO FILE "+F$:GOSUB SHOWALL:GOTO ERRORHALT.LOCAL
  PLAYFILE$=F$
  GOSUB Play.The.File
  COMMAND$="CD:.."
  GOSUB DOS.CMD
  INCHAPTER = FALSE
  COLOR VGA.WHITE, BLACK
RETURN

PLAY.INTRO:
  BOOKDIR$=""
  POKE $9FB9, $FE
  GOSUB ZERO.PPOS
  IN.INTRO=TRUE
  PLAYFILE$="INTRO.WAV"
  GOSUB INFORMATION.BOX
  GOSUB PLAY.THE.FILE
  IN.INTRO=0
RETURN

PLAY.EPILOGUE:
  REM S$="WE GOT EPILOGUE":GOSUB DEBUG.PRINT
  BOOK.DIR$=""
  IN.EPILOGUE=TRUE
  GOSUB ZERO.PPOS
  PLAYFILE$="EPILOGUE.WAV"
  IF GOT.BOOKMARK THEN GOSUB INFORMATION.BOX:GOTO SKIP.TO.PLAY.EPILOGUE
  GOSUB PRINTCHAPTER
SKIP.TO.PLAY.EPILOGUE:
  PLAYFILE$="EPILOGUE.WAV"
  GOSUB PLAY.THE.FILE
  IN.EPILOGUE=FALSE
RETURN

ZERO.PPOS:
  PPOS$="{GREY 1}"+NOUGHT$+"{RED}:{GREY 1}"+NOUGHT$+"{RED}:{GREY 1}"+NOUGHT$
RETURN

CHECKBOOKMARK:
  SAVECHAPTER = CHAPTER
  CHAPTER = 0
  F$="BOOK.MARK":GOSUB FILEEXISTS
  IF NOT FE% THEN RETURN
  OPEN 7,DEVICE,7,"BOOK.MARK,S,R"
  INPUT# 7, S$
  GOSUB TRIM
  IF S$<>"SINGLE" AND S$<>"INTRO" AND S$<>"EPILOGUE" THEN CHAPTER = VAL(S$)
  IF S$="INTRO" THEN CHAPTER = -1
  IF S$="SINGLE" THEN CHAPTER = -2
  IF S$="EPILOGUE" THEN CHAPTER = -3
  REM S$=STR$(CHAPTER):GOSUB DEBUG.PRINT
  S$=""
  INPUT# 7, S$
  SEEKTIMER = VAL(S$)
  REM GOSUB DEBUG.PRINT
  CLOSE 7
  GOT.BOOKMARK = (CHAPTER > 0) OR (CHAPTER=-1) OR (CHAPTER=-2) OR (CHAPTER=-3)
  IF NOT GOT.BOOKMARK THEN CHAPTER=SAVECHAPTER
  IF GOT.BOOKMARK THEN GOTO KILLFILE
RETURN

PLAY.THE.FILE:
  F$=PLAYFILE$
  REM S$=PLAYFILE$+" IN PLAY THE FILE":GOSUB DEBUG.PRINT
  REM S$="LOAD WAVE":GOSUB DEBUG.PRINT
  GOSUB LOADWAVE
  REM S$="LOAD WAVE DONE":GOSUB DEBUG.PRINT
  SECS = FN ROUND(Wave.Data.Size/BytesPerSecond)
  BOOK.END.TIME = INT(SECS*59.98)
  MINS = INT(SECS/60)
  SECS = SECS - (MINS*60)
  HOURS = INT(MINS/60)
  MINS = MINS - (HOURS*60)
  FHR$=MID$(STR$(HOURS),2)
  IF HOURS<10 THEN FHR$="0"+FHR$
  FMIN$=MID$(STR$(MINS),2)
  IF MINS<10 THEN FMIN$="0"+FMIN$
  FSEC$=MID$(STR$(SECS),2)
  IF SECS<10 THEN FSEC$="0"+FSEC$
  FLEN$="{YEL}"+FHR$+"{RED}:{YEL}"+FMIN$+"{RED}:{YEL}"+FSEC$
  GOSUB PRINT.WAVFile.Length
  SAVETIMER=0
  IF GOT.BOOKMARK THEN GOSUB BOOK.SEEK:SAVETIMER=SEEKPOS:GOSUB CALC.PPOS:GOSUB PRINT.Play.Position
  LOCATE 25,4
  COLOR VGA.BLACK2,VGA.DARKGRAY
  REM S$="CALLING PLAY.WAVE.FILE":GOSUB DEBUG.PRINT
  GOSUB PLAY.Wave.File
  CLOSE 6
  TextVisible=PEEK(R13L)
  PCM.VOLUME = PEEK(AUDIO.Ctrl) AND 15
RETURN

SEEK.FORWARD:
  IF SAVETIMER >= (BOOK.END.TIME-1000) THEN RETURN
     SAVETIMER = SAVETIMER + 960
GOTO DO.SEEK

SEEK.BACK:
 IF SAVETIMER < 1000 THEN SAVETIMER=0:P0=44:P1=0:P2=0:P3=0:CHANNEL=6:GOTO POSITION
    SAVETIMER = SAVETIMER - 960
DO.SEEK:
  TARGETBYTE = (BytesPerSecond * FN ROUND(SAVETIMER/60)) + 44
  HIWORD = INT(TARGETBYTE/65536)
  LOWORD = TARGETBYTE - (HIWORD*65536)
  P0 = (FN Lo.Byte(LOWORD)) AND %11111100
  REM P0 = (P0 AND %11111100)
  P1 = FN Hi.Byte(LOWORD)
  P2 = FN Lo.Byte(HIWORD)
  P3 = FN Hi.Byte(HIWORD)
  CHANNEL = 6
GOTO POSITION


BOOK.SEEK:
  GOT.BOOKMARK=0
  SEEKPOS = INT(SEEKTIMER/60)
  TARGETBLOCK = INT((BytesPerSecond * SEEKPOS) / 65536)
  SEEKPOS = INT(((TARGETBLOCK*65536)/BytesPerSecond)*60)
  P0=44
  P1=0
  P2 = FN LO.Byte(TARGETBLOCK)
  P3 = FN HI.Byte(TARGETBLOCK)
  CHANNEL = 6
GOTO POSITION

CHECKART:
  LOADED = FALSE
  F$="ART.BMX":GOSUB FILEEXISTS
  IF NOT FE% THEN RETURN
  IF BOOK.Startup THEN TextVisible=0:BOOK.Startup=0
  GOSUB HIDEALL
  RECT 0,0,319,239,0
  BMXFILE$=F$
  GOSUB LOADBMX
  GOSUB SHOWGRAPHICS
  CLOSE 4
  GOSUB SET.VGATextColors
  IF TextVisible=255 THEN SLEEP 45:GOSUB SHOWTEXT
  LOADED=TRUE
RETURN

LOADBOOK:
  GOT.SINGLE=0
  SUCCESS = 0
  F$="BOOK.DESC":GOSUB FILEEXISTS
  IF NOT FE% THEN RETURN
  OPEN 5,DEVICE,5,"BOOK.DESC,S,R"
  SUBTITLE$=""
  INPUT# 5, TITLE$
  INPUT# 5, AUTHOR$
  LINPUT# 5, TMP$
  IF TMP$="ENDDESC" THEN ENDLOADBOOK
  YEAR$=TMP$
  LINPUT# 5, TMP$
  IF TMP$="ENDDESC" THEN ENDLOADBOOK
  SUBTITLE$=TMP$
ENDLOADBOOK:
  SUCCESS=TRUE
  CLOSE 5
  F$="BOOK.CHAPS":GOSUB FILEEXISTS
  IF NOT FE% THEN GOSUB COUNT.THE.CHAPTERS:GOTO SKIP.COUNT
  OPEN 5,DEVICE,5,F$+",S,R"
  INPUT# 5, S$
  GOSUB TRIM
  IF S$="NONE" THEN GOT.A.SINGLE
  CHAPTERS = VAL(S$)
SKIP.COUNT:
  IF CHAPTERS=0 THEN CHAPTERS=-1
  GOTO DONE.LOAD.BOOK
GOT.A.SINGLE:
  GOT.SINGLE = -1
  GOSUB SHOWALL
  CHAPTERS=-2
  SINGLE.CHAPTER = -1
  INPUT# 5, BOOKFILE$
  PLAYFILE$=BOOKFILE$
DONE.LOAD.BOOK:
  CLOSE 5
RETURN

COUNT.THE.CHAPTERS:
  GOSUB SHOWTEXT
  PRINT "BOOK.CHAPS Not found...
  PRINT
  PRINT "Counting Chapters: "
  CHAPTERS=0
  COUNTER=1
  CHAP$="CHAP"
  FOR I= -1 TO 0 STEP 0
      LOCATE 3,21:PRINT COUNTER;
      TST$=STR$(COUNTER)
      TST$=MID$(TST$,2)
      F$=CHAP$+TST$+"/"+CHAP$+TST$+".WAV"
      GOSUB FILEEXISTS
      IF FE% THEN COUNTER=COUNTER+1
      I=FE%
  NEXT
  CHAPTERS = COUNTER-1
  IF CHAPTERS=0 THEN ERRMSG$ "BOOK CHAPTER ERROR":GOTO ERRORHALT.LOCAL
  OPEN 9,DEVICE,9,"@:BOOK.CHAPS,S,W"
  PRINT# 9, CHAPTERS
  CLOSE 9
RETURN



LOADWAVE:
   REM S$="LOAD WAVE HEADER":GOSUB DEBUG.PRINT
   GOSUB LoadWAVEHeader
   GOSUB ParseRIFFHeader
   RETURN

PLAY.Wave.File:
   UserEnded = 0
   PAUSED = 0
   IF FASTMODE AND (NOT IsHostFS) THEN DOS "U0>B0"
   FillLoopCount = 4
   IF IsHostFS THEN FillLoopCount = 12
   IF BytesPerSecond > 79999 THEN FillLoopCount = FillLoopCount+1
   IF BytesPerSecond > 120000 THEN FillLoopCount = FillLoopCount+1
   IF BytesPerSecond > 120000 AND (FASTMODE AND (NOT IsHostFS)) THEN DOS "U0>B3"
   POKE R13L, TextVisible
   POKE A.REG, FillLoopCount
   POKE X.REG, 6
   POKE R0L, VERA.RATE
   POKE R0H, VERA.CFG
   POKE R1L, $FF
   BANK 3
   TI = SAVETIMER
   SYS StartPCM.Play
   SAVETIMER=TI
   GOSUB SaveCursor.AndColor
getPKey:
   rKey = PEEK(R2L)
   TextVisible = PEEK(R13L)
   IF rKey = 29 THEN GOSUB SEEK.FORWARD:GOSUB CALC.PPOS:GOSUB PRINT.Play.Position:GOSUB KEEP.PLAYING:GOTO getPKey
   IF rKey = 157 THEN GOSUB SEEK.BACK:GOSUB CALC.PPOS:GOSUB PRINT.Play.Position:GOSUB KEEP.PLAYING:GOTO getPKey
   IF rKey = 24 THEN IF (CHAPTER>1) AND (NOT IN.INTRO) AND NOT (IN.EPILOGUE) THEN CHAPTER=CHAPTER-2:rKey=0
   IF rKey = 24 THEN GOSUB Keep.Playing:GOTO getPKey
   IF rKey = 9 THEN IF ((CHAPTER=CHAPTERS) OR (IN.EPILOGUE)) AND (NOT GOT.SINGLE) THEN POKE R2L,27:  DO.QUIT=0:GOTO getPKey
   IF rKey = 9 THEN IF (NOT GOT.SINGLE) AND (CHAPTER<CHAPTERS) THEN rKey = 0
   IF rKey = 9 THEN GOSUB Keep.Playing:GOTO getPKey
   IF rKey = 0 THEN CLOSE 6:COLOR VGA.WHITE,BLACK:RETURN
   IF rKey = 32 OR rKey=27 THEN CURSAVED=0:GOSUB Wait32
   IF DO.QUIT THEN RETURN
   GOTO getPKey

Wait32:
  GOSUB SHOW.PAUSED
Wait32b:
  K=rKey
  IF rKey=27 THEN GOSUB ASK.2.QUIT
  IF DO.QUIT THEN RETURN
  IF K=27 AND NOT DO.QUIT THEN GOTO PLAY.CONTINUE

  FOR I = 0 TO 1 STEP 0
    GET K$
    K=ASC(K$)
    IF K=27 THEN rKey=27:GOTO Wait32b
    IF K=32 THEN PLAY.CONTINUE
  NEXT I

PLAY.CONTINUE:
  POKE R2L,0:COLOR BLACK, VGA.DARKGRAY
  LOCATE 25,4:PRINT RPT$(176,11);
  IF TextVisible=0 THEN GOSUB HIDETEXT
KEEP.PLAYING:
  GOSUB RestoreCursor.AndColor
  TI=SAVETIMER
  SYS ContinuePCM.Play
  SAVETIMER=TI
  GOSUB SaveCursor.AndColor
  rKey = PEEK(R2L)
  IF rKey=32 OR rKey=27 THEN SHOW.PAUSED
  RETURN

SCRATCH.BOOKMARK:
 IF USER.QUIT THEN USER.QUIT=0:RETURN
 F$=BOOKDIR$+"BOOK.MARK":GOSUB FILEEXISTS
 IF FE% THEN GOTO KILLFILE
 RETURN

SHOW.PAUSED:
  GOSUB SHOWTEXT
  LOCATE 25, 4
  COLOR VGA.WHITE, VGA.BLACK2
  PRINT "*";
  COLOR VGA.GREEN
  PRINT " PAUSED ";
  COLOR VGA.WHITE
  PRINT "*";
  GOSUB CALC.PPOS
  GOSUB PRINT.Play.Position
  COLOR VGA.WHITE,BLACK

WRITEBOOKMARK:
  OPEN 7,DEVICE,7,"@:"+BOOKDIR$+"BOOK.MARK,S,W"
  IF IN.INTRO THEN PRINT# 7,"INTRO":GOTO OUTTIME
  IF IN.EPILOGUE THEN PRINT# 7,"EPILOGUE":GOTO OUTTIME
  IF SINGLE.CHAPTER THEN PRINT# 7, "SINGLE":GOTO OUTTIME
  PRINT# 7, CHAPTER
OUTTIME:
  PRINT# 7, SAVETIMER
  CLOSE 7
  RETURN

CALC.PPOS:
  PSECS=FN ROUND(SAVETIMER/60):PMINS=INT(PSECS/60):PSECS=PSECS-(PMINS*60):PHRS=INT(PMINS/60):PMINS=PMINS-(PHRS*60)
  PHR$=MID$(STR$(PHRS),2)
  IF PHRS<10 THEN PHR$="0"+PHR$
  PMIN$=MID$(STR$(PMINS),2)
  IF PMINS<10 THEN PMIN$="0"+PMIN$
  PSEC$=MID$(STR$(PSECS),2)
  IF PSECS<10 THEN PSEC$="0"+PSEC$
  PPOS$="{GREY 1}"+PHR$+"{RED}:{GREY 1}"+PMIN$+"{RED}:{GREY 1}"+PSEC$
  RETURN

ASK.2.QUIT:
 USER.QUIT=0
 DO.QUIT=0
 TextVisible = PEEK(R13L)
 GOSUB SHOWTEXT
 BANK 3
 COLOR VGA.RED, VGA.BLACK2
 X=5:Y=11:H=9:W=32:GOSUB TEXTBOX
 COLOR VGA.RED
 LOCATE 14,7:PRINT "QUIT ";
 COLOR VGA.GREEN
 L=LEN(TITLE$)
 IF L<25 THEN DTITLE$=TITLE$
 IF L>24 AND L<27 THEN DTITLE$=LEFT$(TITLE$,24)
 IF L>27 THEN DTITLE$=LEFT$(TITLE$,21)+"..."
 PRINT DTITLE$;
 LOCATE 16, 9
 COLOR VGA.MEDGRAY
 PRINT "(";
 COLOR VGA.LITEGREEN
 PRINT "Y";:COLOR VGA.YELLOW:PRINT "/";:COLOR VGA.LITEGREEN
 PRINT "N";:COLOR VGA.MEDGRAY:PRINT ")";
 LOCATE 12, 10
 GOTIT = FALSE
 COLOR VGA.WHITE, VGA.DARKGRAY
 LOCATE 16, 14:PRINT " ";
 COLOR VGA.YELLOW
GETIT:
 GET X$:IF X$="" THEN GETIT
 IF X$="y" THEN X$="Y"
 IF X$="n" THEN X$="N"
 IF X$="{ESC}" THEN GOTIT=TRUE:Q$="N":X$="{CR}"
 IF X$<>"Y" AND X$<>"N" AND X$<>"{CR}" THEN FMDRUM 7,87
 IF X$="Y" OR X$="N" THEN GOTIT = TRUE:Q$=X$:LOCATE 16,14:PRINT X$;
 IF X$<>"{CR}" THEN GETIT
 DO.QUIT = (Q$="Y")
 IF DO.QUIT THEN USER.QUIT=-1
 IF NOT DO.QUIT THEN GOSUB INFO2:GOSUB RestoreCursor.AndColor:IF TextVisible=0 THEN GOSUB HIDETEXT
 rKey = 32
 IF DO.QUIT THEN rKey=0
 RETURN

SHOW.ControlBar:
 COLOR VGA.WHITE,VGA.BLACK2
 LOCATE 30,1
 PRINT RPT$(32,40);
 LOCATE 30,2
 PRINT "[";
 COLOR VGA.LITEGREEN
 PRINT "ESC";
 COLOR VGA.WHITE
 PRINT "]-";
 COLOR VGA.LITERED:PRINT "Exit";
 LOCATE 30, 14
 COLOR VGA.WHITE
 PRINT "[";
 COLOR VGA.LITEGREEN
 PRINT "SPACE";
 COLOR VGA.WHITE
 PRINT "]-";
 COLOR VGA.LITERED:PRINT "Pause";
 LOCATE 30,29
 COLOR VGA.WHITE
 PRINT "[";:COLOR VGA.LITEGREEN
 PRINT ARROWS$;
 COLOR VGA.WHITE:PRINT "]-";
 COLOR VGA.LITERED:PRINT "Volume";
 LOCATE 29, 3
 COLOR VGA.WHITE
 PRINT "[";
 COLOR VGA.LITEGREEN
 PRINT "F1";
 COLOR VGA.WHITE
 PRINT "]-";
 COLOR VGA.LITERED:PRINT "Information ";
 COLOR VGA.WHITE:PRINT "(";
 COLOR VGA.GREEN
 PRINT "On";
 COLOR VGA.MEDGRAY
 PRINT "/";
 COLOR VGA.GREEN
 PRINT "Off";
 COLOR VGA.WHITE:PRINT ")";
 RETURN

ParseRIFFHeader:
  IsWave = (LEFT$(RIFFHDR$,4) = "RIFF") AND (MID$(RIFFHDR$,9,4)="WAVE")
  If IsWave THEN Get.Wave.Parameters
  RETURN
Get.Wave.Parameters:
  TMP1 = ASC(MID$(RIFFHDR$,5,1))-44:IF TMP1<0 THEN TMP1=0
  TMP2 = ASC(MID$(RIFFHDR$,6,1))*256
  TMP3 = ASC(MID$(RIFFHDR$,7,1))*65536
  TMP4 = ASC(MID$(RIFFHDR$,8,1))*16777216
  Wave.Data.Size = TMP1+TMP2+TMP3+TMP4
  PCMBits = ASC(MID$(RIFFHDR$,35,1))
  TMP1 = ASC(MID$(RIFFHDR$,21,1))
  TMP2 = ASC(MID$(RIFFHDR$,22,1))
  NumChannels = ASC(MID$(RIFFHDR$,23,1))
  TMP4 = (TMP1) + (256*TMP2)
  IsPCM = (TMP4=1)
  TMP1 = ASC(MID$(RIFFHDR$,25,1))
  TMP2 = ASC(MID$(RIFFHDR$,26,1)) * 256
  TMP3 = ASC(MID$(RIFFHDR$,27,1)) * 65536
  SampleRate = TMP1+TMP2+TMP3
  VERA.RATE = FN ROUND((SampleRate / 48828.15) * 128)
  IsStereo = (NumChannels=2)
  IsSupported = (IsWave AND (PCMBits=16)) AND IsPCM AND ((NumChannels > 0) AND (NumChannels < 3))
  VERA.CFG=0
  IF NOT IsSupported THEN RETURN
  VERA.CFG = (VERA.CFG OR BIT16.ON)
  IF IsStereo THEN VERA.CFG = (VERA.CFG OR STEREO.ON)
  VERA.CFG = VERA.CFG OR PCM.VOLUME
  BytesPerSecond = ((VERA.RATE/128) * 48828.15)*2
  IF IsStereo THEN BytesPerSecond = BytesPerSecond*2
  BytesPerSecond = FN ROUND(BytesPerSecond)
  RETURN

LoadWAVEHeader:
   REM S$="IN LOAD WAVE HEADER":GOSUB DEBUG.PRINT
   REM S$=F$+" IS TARGET":GOSUB DEBUG.PRINT
   REM S$="TESTING FILEEXISTS":GOSUB DEBUG.PRINT
   GOSUB FILEEXISTS
   REM S$="FE ="+STR$(FE%):GOSUB DEBUG.PRINT
   RIFFHDR$ = RPT$(44,44)
   CLOSE 6
   OPEN 6,8,6,F$+",S,R"
     POKE X.REG, 6
     SYS CHKIN
     POKE A.REG, 44
## GET A POINTER TO THE WAVEHDR STRING THEN PEEK
## IT FOR THE ADDRESS TO THE STRING DATA
     A=POINTER(RIFFHDR$)+1
     POKE X.REG, PEEK(A)
     POKE Y.REG, PEEK(A+1)
     POKE C.REG, 0
     SYS MACPTR
     SYS CLRCHN
     REM S$="LOAD WAVE HEADER DONE":GOSUB DEBUG.PRINT
RETURN

INFORMATION.BOX:
  GOSUB HIDETEXT
  COLOR VGA.WHITE,BLACK
 IF INFO.FLAGGED THEN PRINTCHAPTER
  CLS
  INFO.FLAGGED=-1
  GOSUB SHOW.ControlBar
  COLOR VGA.WHITE,BLACK
INFO2:
  COLOR VGA.ORANGE, VGA.DARKGRAY
  X=3:Y=4:H=24:W=36:GOSUB TEXTBOX
  COLOR VGA.WHITE, VGA.BLACK2
  WORKTITLE$ = TITLE$
  L=LEN(WORKTITLE$)
  IF L<34 THEN WORKTITLE$ = "*{LIGHT RED} "+WORKTITLE$+"{GREY 1} *"
  L=LEN(WORKTITLE$)-2
  IF L<36 THEN WORKTITLE$="*"+WORKTITLE$+"*"
  WORKTITLE$="{GREY 1}"+WORKTITLE$
  L = LEN(WORKTITLE$)- 3
  X = FN ROUND((40 - L)/2)
  IF X<1 THEN X=1
  LOCATE 2, X:PRINT WORKTITLE$;

  COLOR VGA.LITEGREEN,VGA.DARKGRAY
  LOCATE 6, 5:PRINT "Author: ";
  COLOR VGA.WHITE:PRINT AUTHOR$;

 IF LEN(SUBTITLE$) = 0 THEN YEARPRINT
  COLOR VGA.LITEGREEN, VGA.DARKGRAY
  LOCATE 8,5:PRINT "Full Title: ";
  COLOR VGA.WHITE
 IF LEN(SUBTITLE$)<21 THEN GOTO SUBTITLEPRINT
  GOT.COMMA = 0
  FOR I = 1 TO LEN(SUBTITLE$)
     C$=MID$(SUBTITLE$,I,1)
     PRINT C$;
     GOSUB PLOTXY
     IF (X > 29) AND (C$=CHR$(32) OR C$=CHR$(9) OR GOT.COMMA) THEN LOCATE Y+1, 5
     GOT.COMMA = (C$=",")
  NEXT I
  GOTO YEARPRINT

SUBTITLEPRINT:
  PRINT SUBTITLE$;
YEARPRINT:
  GOSUB PLOTXY
  LOCATE Y+2, 5
  COLOR VGA.LITEGREEN:PRINT "Published: ";
  COLOR VGA.WHITE:PRINT YEAR$;
  LOCATE 26, 4
  COLOR VGA.WHITE, VGA.BLACK2
  PRINT BL$
  LOCATE 26, 4
 IF GOT.SINGLE THEN SKIP.TABCONTROL
  PRINT "[";
  COLOR VGA.GREEN:PRINT "TAB";
  COLOR VGA.WHITE:PRINT "]-";
  COLOR VGA.RED
  PRINT "Chap{LIGHT RED}";RIGHT$(LR.ARROWS$,2);
  COLOR VGA.WHITE:PRINT "(";
  COLOR VGA.MEDGRAY:PRINT "{GREY 1}+{YEL}shift";
  COLOR VGA.LITEGREEN:PRINT LEFT$(LR.ARROWS$,2);
  COLOR VGA.WHITE:PRINT ")";
SKIP.TABCONTROL:
  LOCATE 26, 26
  COLOR VGA.WHITE
  PRINT "[";
  COLOR VGA.GREEN:PRINT CHR$($80);CHR$($1D);
  COLOR VGA.WHITE:PRINT "]-";
  COLOR VGA.RED:PRINT "{PUR}Fwd{GREY 1}/{PUR}Rev";
PRINTCHAPTER:
  COLOR VGA.LITEGREEN, VGA.DARKGRAY
  FOR Y=18 TO 23:LOCATE Y,4:PRINT BL$;:NEXT

  GOSUB Print.WAVFile.Length
  GOSUB Print.Play.Position

  LN$="":LOCATE 20,5
  COLOR VGA.LITEGREEN
  IF GOT.SINGLE OR IN.INTRO OR IN.EPILOGUE THEN SINGLEPRINT
  PRINT "Chapter: ";
  COLOR VGA.YELLOW:PRINT CHAPTER$;
  IF CHAPTERS > 0 THEN PRINT "{GREY 1} of";:COLOR VGA.YELLOW:PRINT CHAPTERS;
  GOTO END.INFO
SINGLEPRINT:
  PRINT "Playing:  ";
  COLOR VGA.YELLOW
  L=LEN(PLAYFILE$)
  IF IN.INTRO OR IN.EPILOGUE THEN PRINT LEFT$(PLAYFILE$,L-4):GOTO END.INFO
  PRINT BOOKFILE$
END.INFO:
  F$="CHAP.TITLE":GOSUB FILEEXISTS
  IF NOT FE% THEN SKIP.CHAP.TITLE
  GOSUB GRAB.LINE:LOCATE 17,5
  L=LEN(LN$):IF L=0 THEN SKIP.CHAP.TITLE
  IF (L<34) THEN PRINT LN$;:IF L<33 THEN PRINT RPT$(32,33-L);
  IF L<34 THEN SKIP.CHAP.TITLE
  CXOS=0
  FOR I = L TO 1 STEP -1
    C$=MID$(LN$,I,1):C=ASC(C$)
    IF C=32 AND I<33 THEN CXOS=I:I=1
  NEXT
  IF CXOS> 0 THEN PRINT LEFT$(LN$,CXOS);:LOCATE 18,5:TM$=RIGHT$(LN$,(L-CXOS)):PRINT LEFT$(TM$,33);:IF LEN(TM$)<33 THEN PRINT RPT$(32,33-LEN(TM$));
  IF CXOS=0 THEN PRINT LEFT$(LN$,33);
SKIP.CHAP.TITLE:
  IF TextVisible=255 THEN GOTO SHOWTEXT
RETURN

GRAB.LINE:
  LN$=""
  FF$=F$+",S,R"
  OPEN 7,8,7,FF$
  LINPUT# 7,LN$
  CLOSE 7
RETURN

PRINT.WAVFile.Length:
  LOCATE 21,6
  COLOR VGA.LITEGREEN,VGA.DARKGRAY
  PRINT "Length:  ";FLEN$;
RETURN

PRINT.Play.Position:
  LOCATE 22,4
  COLOR VGA.LITEGREEN,VGA.DARKGRAY
  PRINT "Position:  ";PPOS$;
  COLOR VGA.BLACK2, VGA.DARKGRAY:PRINT CHR$($DE);
  COLOR VGA.BLACK2, VGA.MEDGRAY
  PRINT "updates on   ";
  COLOR VGA.BLACK2, VGA.DARKGRAY:PRINT CHR$($DD);
  LOCATE 23,23:COLOR VGA.BLACK2, VGA.DARKGRAY:PRINT CHR$($DE);
  COLOR VGA.BLACK2, VGA.MEDGRAY
  PRINT "pause or seek";
  COLOR VGA.BLACK2, VGA.DARKGRAY:PRINT CHR$($DD);
  COLOR VGA.WHITE,VGA.DARKGRAY
RETURN

LOADBMX:
     OPEN 4,DEVICE,4,BMXFILE$+",S,R"
     POKE X.REG, 4
     SYS CHKIN
     POKE A.REG, 32
## GET A POINTER TO THE BMX.HDR STRING THEN PEEK
## IT FOR THE ADDRESS TO THE STRING DATA
     A=POINTER(BMX.HDR$)+1
     POKE X.REG, PEEK(A)
     POKE Y.REG, PEEK(A+1)
     POKE C.REG, 0
     SYS MACPTR
     SYS CLRCHN
     WASERROR = 0
     DOSHOW = 0
     GOSUB PARSEHEADER
     IF BMX.ID$<>"BMX" THEN ERRMSG$= "{RED}"+F$+"{WHT} IS NOT A BMX FILE":GOTO ERR.EXIT1
     IF BMX.BITS<>8 THEN ERRMSG$= "{RED}"+STR$(BMX.BITS)+"{WHT} BITS NOT SUPPORTED":GOTO ERR.EXIT1
     IF BMX.VER<>1 THEN ERRMSG$= "{RED}"+F$+"{WHT} IS VERSION:{RED}"+STR$(BMX.VER)+"{WHT} NOT SUPPORTED!":GOTO ERR.EXIT1
     IF BMX.WIDTH > 320 THEN ERRMSG$= "{RED}"+STR$(BMX.WIDTH)+"{WHT} WIDTH NOT CURRENTLY SUPPORTED":GOTO ERR.EXIT1
     POKE R0L, FN Lo.Byte(BMX.WIDTH)
     POKE R0H, FN Hi.Byte(BMX.WIDTH)
     POKE R1L, FN Lo.Byte(BMX.HEIGHT)
     POKE R1H, FN Hi.Byte(BMX.HEIGHT)
     POKE R2L, BMX.PALUSED
     POKE R2H, BMX.FIRSTPAL
     BANK 4
     SYS BMX.BANKLOADER
     CLOSE 4
RETURN

ERR.EXIT1:
  SCREEN 1
  ERRMSG$="BMX ERROR: "+ERRMSG$
  CLOSE 4:SYS CLRCHN
  GOTO ERRORHALT.LOCAL
ERR.EXIT:
  PRINT:PRINT " ";ERRMSG$:WASERROR=-1:RETURN

PARSEHEADER:
  BMX.ID$=LEFT$(BMX.HDR$,3)
  BMX.VER=ASC(MID$(BMX.HDR$,4,1))
  BMX.BITS = ASC(MID$(BMX.HDR$,5,1))
  BMX.VERA.REG=ASC(MID$(BMX.HDR$,6,1))
  BMX.WIDTH = ASC(MID$(BMX.HDR$,7,1)) + (ASC(MID$(BMX.HDR$,8,1))*256)
  BMX.HEIGHT = ASC(MID$(BMX.HDR$,9,1)) + (ASC(MID$(BMX.HDR$,10,1))*256)
  BMX.PALUSED = ASC(MID$(BMX.HDR$,11,1))
  BMX.FIRSTPAL = ASC(MID$(BMX.HDR$,12,1))
  BMX.FILE.OFFSET = ASC(MID$(BMX.HDR$,13,1))+(ASC(MID$(BMX.HDR$,14,1))*256)
  BMX.COMPRESS= ASC(MID$(BMX.HDR$,15,1))
RETURN

TestFileSystem:
  F$="TESTFILE":GOSUB FILEEXISTS
  IF FE% THEN StartTest
  OPEN 2,8,2,"@:TESTFILE,S,W"
  FOR I = 1 TO 20
     PRINT# 2, RPT$(65,55);
  NEXT I
  CLOSE 2
StartTest:
  OPEN 2,8,2,"TESTFILE,S,R"
  POKE X.REG,2
  SYS CHKIN
  BANK 62
  POKE X.REG,$00
  POKE Y.REG,$A0
  POKE C.REG, 0
  POKE A.REG, 0
  SYS MACPTR
  IsHostFS = (PEEK(Y.REG) = 1)
  SYS CLRCHN
  CLOSE 2
RETURN



#INCLUDE "BOOKS.BI"
