#CONTROLCODES 1



SCREEN.SIZE = $12C00
TRUE=-1
FALSE=0
PUTIMAGE=FALSE


GETKEY1:
GET X$:IF X$="" THEN GETKEY1

CLS
F$="SMILEY.BIN"
PUTIMAGE = FALSE
LOCATE 15,2:PRINT "GETTING IMAGE"
X1=35:Y1=26:X2=104:Y2=96
T1=TI
GOSUB BITBLT
T2=TI



## BITBLIT IS CALLED WITH PUTIMAGE = 0 (FALSE) TO GET THE IMAGE
## IMAGE IS BUFFERED TO FILE PASSED IN F$
## SCREEN RECTANGLE TO CAPTURE IS PASSED IN X1, Y1, X2, Y2
##
##
## BITBLIT IS CALLED WITH PUTIMAGE = -1 (TRUE) TO PUT THE IMAGE
## ON THE SCREEN F$ WILL HOLD FILE NAME.
## PUT STARTING AT X1, Y1
##
## BLITWIDTH AND BLITLINES NEED TO BE SET TO THE WIDTH AND HEIGHT
## OF THE IMAGE RESPECTIVELY, NO SUCH INFO IS IN THE FILE.
##
## IF IMMEDIATELY FOLLOWING A BITBLIT GETIMAGE CALL THEN
## BLITWIDTH AND BLITLINES WILL ALREADY BE SET.
## IN THAT INSTANCE ONLY X1, Y1 NEED TO BE CHANGED
##
## X1 AND Y1 CAN BE LEFT UNCHANGED IF THE USE IS SAVING A
## SECTION OF SCREEN TO RESTORE AFTER SOMETHING ELSE IS DRAWN
##
##
## FOR THAT CASE CALL BITBLIT WITH PUTIMAGE = FALSE
## DO YOUR SCREEN STUFF
## SET PUTIMAGE TO TRUE,  CALL BITBLIT AGAIN TO RESTORE ALREADY


BITBLT:
    ADDON$=",P,W"
    PREFIX$="@:"
    IF PUTIMAGE THEN PREFIX$="":ADDON$=",S,R"
    FF$=PREFIX$ + F$ + ADDON$
    IF PUTIMAGE THEN SET.IO=CHKIN:DO.FILEIO=MACPTR:GOTO DOSCREENBLIT
    SET.IO = CHKOUT
    DO.FILEIO = MCIOUT
    BLITWIDTH = (X2-X1) + 1
    BLITLINES = (Y2-Y1) + 1
DOSCREENBLIT:
    IF Y1+BLITLINES > YLIMIT THEN BLITLINES=YLIMIT-Y1
    OPEN 2,8,2,FF$
    POKE X.REG, 2
    SYS SET.IO
   IF X1 > 255 THEN BYTESPLIT
   POKE R0L, X1
   POKE R0H, 0
   GOTO POKEY
BYTESPLIT:
  POKE R0L, X1 AND $00FF
  POKE R0H, INT(X1/256)
POKEY:
   POKE R1L, Y1
   POKE R1H, 0
   SYS FB.CURSOR.POSITION
   FOR Y= 1 TO BLITLINES
       I=0
   INLOOP:
       BYTES=BLITWIDTH-I
       IF BYTES>$FF THEN BYTES=$FF
       POKE A.REG, BYTES
       POKE X.REG, $23
       POKE Y.REG, $9F
       POKE C.REG, $01
       SYS DO.FILEIO
       I=I+PEEK(X.REG)
       IF I<BLITWIDTH THEN INLOOP
       SYS FB.CURSOR.NEXTLINE
    NEXT Y
    CLOSE 2
    SYS CLRCHN
    RETURN



REM BRESHENHAM CIRCLE DRAWING ENHANCED
REM..
REM..   XLIMIT & YLIMIT must be initialized (319 & 239)
REM..   Q1,Q2,Q3,Q4 Must be set to 1 to draw entire CIRCLE
REM..   If the Q variables are not set then the CIRCLE is not drawn
REM..   This might seem like a pain, but if Q3 & Q4 are 1
REM..   and Q1&Q2 are 0 then the bottom half is drawn. etc...
REM...
REM...
REM          VARIABLES TO SET BEFORE CALLING
REM..
REM   CX & CY is the Circles Center.  RA is Radius
REM   CC is Circle draw color
REM   FILL IS 0 For an empty circle 1 for a filled circle
REM   (Filled circles draw slightly faster)
REM   XS & YS IS XSquish & YSquish to draw Ovals.
REM   1,1 is a normal Circle.    >1 and <=0 is ignored
REM   values between 0 and 1 are significant.
REM   i.e.  Setting YS=1 and XS=.5 draws an Oval flattened horizontally.
REM   ..
REM   ..   Sacrificed a little speed to enable clipping.  If Part of the Circle
REM   ..   Is off Screen there is no error, the part on screen is drawn.

BCIRCLE:
     WR=RA:X=0: D=2*(1-RA):W=INT(2*320/240)
BCLOOP:
       IF WR < 0 THEN BCLOOPEND
       DX=X*XS:DY=WR*YS
       ZX=CX-DX
       ZY=CY-DY
       AX=CX+DX
       AY=CY+DY
       IF FILL=1 THEN DOFILL
         IF ZX<0 OR ZX>XLIMIT OR ZY<0 OR ZY>YLIMIT OR Q1=0 THEN SKIP4
         PSET ZX, ZY, CC
SKIP4:
         IF AX<0 OR AX>XLIMIT OR ZY<0 OR ZY>YLIMIT OR Q2=0 THEN SKIP2
         PSET AX, ZY, CC
SKIP2:
         IF ZX<0 OR ZX>XLIMIT OR AY<0 OR AY>YLIMIT OR Q3=0 THEN SKIP3
         PSET ZX, AY, CC
SKIP3:
         IF AX<0 OR AX>XLIMIT OR AY<0 OR AY>YLIMIT OR Q4=0 THEN SKIPFILL
         PSET AX, AY, CC
       GOTO SKIPFILL
DOFILL:
       X1=ZX:X2=AX
       IF (Q1=0 AND Q2=O) OR X1>XLIMIT THEN FILL2
       IF ZY<0 OR ZY>YLIMIT THEN FILL2
       IF X1<0 THEN X1=0
       IF X2>XLIMIT THEN X2=XLIMIT
       IF Q1=0 THEN X1=CX
       IF Q2=0 THEN X2=CX
          LINE X1,ZY,X2,ZY,CC
FILL2:
       IF (Q3=0 AND Q4=0) OR ZX>XLIMIT THEN SKIPFILL
       IF AY<0 OR AY>YLIMIT THEN SKIPFILL
       IF ZX<0 THEN ZX=0
       IF AX>XLIMIT THEN AX=XLIMIT
       IF Q3=0 THEN ZX=CX
       IF Q4=0 THEN AX=CX
          LINE ZX,AY,AX,AY,CC
SKIPFILL:
       IF (D+RA)>0 THEN WR=WR-1:D=D-W*WR-1
       IF X>D THEN X=X+1:D=D+2*X+1
       GOTO BCLOOP
BCLOOPEND:
       RETURN

